<?php

namespace PhpLang\Phack\PhpParser\Parser;
use PhpLang\Phack\PhpParser\Node as PhackNode;
use PhpLang\Phack\PhpParser\Node\Expr as PhackExpr;
use PhpLang\Phack\PhpParser\Node\Stmt as PhackStmt;

use PhpParser\Error;
use PhpParser\Node;
use PhpParser\Node\Expr;
use PhpParser\Node\Name;
use PhpParser\Node\Scalar;
use PhpParser\Node\Stmt;

/* This is an automatically GENERATED file, which should not be manually edited.
 * Instead edit one of the following:
 *  * the preprocessing script grammar/rebuildParser.sh
 */
class HackLang extends \PhpParser\ParserAbstract
{
    protected $tokenToSymbolMapSize = 404;
    protected $actionTableSize = 1020;
    protected $gotoTableSize = 497;

    protected $invalidSymbol = 168;
    protected $errorSymbol = 1;
    protected $defaultAction = -32766;
    protected $unexpectedTokenRule = 32767;

    protected $YY2TBLSTATE  = 388;
    protected $YYNLSTATES   = 692;

    protected $symbolToName = array(
        "EOF",
        "error",
        "T_INCLUDE",
        "T_INCLUDE_ONCE",
        "T_EVAL",
        "T_REQUIRE",
        "T_REQUIRE_ONCE",
        "T_LAMBDA_ARROW",
        "T_LAMBDA_OP",
        "T_LAMBDA_CP",
        "T_PIPE_VAR",
        "T_TYPE",
        "T_NULLSAFE",
        "T_ENUM",
        "T_PIPE",
        "T_SHAPE",
        "T_VECTOR",
        "','",
        "T_LOGICAL_OR",
        "T_LOGICAL_XOR",
        "T_LOGICAL_AND",
        "T_PRINT",
        "T_YIELD",
        "T_DOUBLE_ARROW",
        "T_YIELD_FROM",
        "'='",
        "T_PLUS_EQUAL",
        "T_MINUS_EQUAL",
        "T_MUL_EQUAL",
        "T_DIV_EQUAL",
        "T_CONCAT_EQUAL",
        "T_MOD_EQUAL",
        "T_AND_EQUAL",
        "T_OR_EQUAL",
        "T_XOR_EQUAL",
        "T_SL_EQUAL",
        "T_SR_EQUAL",
        "T_POW_EQUAL",
        "'?'",
        "':'",
        "T_COALESCE",
        "T_BOOLEAN_OR",
        "T_BOOLEAN_AND",
        "'|'",
        "'^'",
        "'&'",
        "T_IS_EQUAL",
        "T_IS_NOT_EQUAL",
        "T_IS_IDENTICAL",
        "T_IS_NOT_IDENTICAL",
        "T_SPACESHIP",
        "'<'",
        "T_IS_SMALLER_OR_EQUAL",
        "'>'",
        "T_IS_GREATER_OR_EQUAL",
        "T_SL",
        "T_SR",
        "'+'",
        "'-'",
        "'.'",
        "'*'",
        "'/'",
        "'%'",
        "'!'",
        "T_INSTANCEOF",
        "'~'",
        "T_INC",
        "T_DEC",
        "T_INT_CAST",
        "T_DOUBLE_CAST",
        "T_STRING_CAST",
        "T_ARRAY_CAST",
        "T_OBJECT_CAST",
        "T_BOOL_CAST",
        "T_UNSET_CAST",
        "'@'",
        "T_POW",
        "'['",
        "T_NEW",
        "T_CLONE",
        "T_EXIT",
        "T_IF",
        "T_ELSEIF",
        "T_ELSE",
        "T_ENDIF",
        "T_LNUMBER",
        "T_DNUMBER",
        "T_STRING",
        "T_STRING_VARNAME",
        "T_VARIABLE",
        "T_NUM_STRING",
        "T_INLINE_HTML",
        "T_ENCAPSED_AND_WHITESPACE",
        "T_CONSTANT_ENCAPSED_STRING",
        "T_ECHO",
        "T_DO",
        "T_WHILE",
        "T_ENDWHILE",
        "T_FOR",
        "T_ENDFOR",
        "T_FOREACH",
        "T_ENDFOREACH",
        "T_DECLARE",
        "T_ENDDECLARE",
        "T_AS",
        "T_SUPER",
        "T_SWITCH",
        "T_ENDSWITCH",
        "T_CASE",
        "T_DEFAULT",
        "T_BREAK",
        "T_CONTINUE",
        "T_GOTO",
        "T_FUNCTION",
        "T_CONST",
        "T_RETURN",
        "T_TRY",
        "T_CATCH",
        "T_FINALLY",
        "T_THROW",
        "T_USE",
        "T_INSTEADOF",
        "T_GLOBAL",
        "T_STATIC",
        "T_ABSTRACT",
        "T_FINAL",
        "T_PRIVATE",
        "T_PROTECTED",
        "T_PUBLIC",
        "T_VAR",
        "T_UNSET",
        "T_ISSET",
        "T_EMPTY",
        "T_HALT_COMPILER",
        "T_CLASS",
        "T_TRAIT",
        "T_INTERFACE",
        "T_EXTENDS",
        "T_IMPLEMENTS",
        "T_OBJECT_OPERATOR",
        "T_LIST",
        "T_ARRAY",
        "T_CALLABLE",
        "T_CLASS_C",
        "T_TRAIT_C",
        "T_METHOD_C",
        "T_FUNC_C",
        "T_LINE",
        "T_FILE",
        "T_START_HEREDOC",
        "T_END_HEREDOC",
        "T_DOLLAR_OPEN_CURLY_BRACES",
        "T_CURLY_OPEN",
        "T_PAAMAYIM_NEKUDOTAYIM",
        "T_NAMESPACE",
        "T_NS_C",
        "T_DIR",
        "T_NS_SEPARATOR",
        "T_ELLIPSIS",
        "';'",
        "'{'",
        "'}'",
        "'('",
        "')'",
        "'`'",
        "']'",
        "'\"'",
        "'$'"
    );

    protected $tokenToSymbol = array(
            0,  168,  168,  168,  168,  168,  168,  168,  168,  168,
          168,  168,  168,  168,  168,  168,  168,  168,  168,  168,
          168,  168,  168,  168,  168,  168,  168,  168,  168,  168,
          168,  168,  168,   63,  166,  168,  167,   62,   45,  168,
          162,  163,   60,   57,   17,   58,   59,   61,  168,  168,
          168,  168,  168,  168,  168,  168,  168,  168,   39,  159,
           51,   25,   53,   38,   75,  168,  168,  168,  168,  168,
          168,  168,  168,  168,  168,  168,  168,  168,  168,  168,
          168,  168,  168,  168,  168,  168,  168,  168,  168,  168,
          168,   77,  168,  165,   44,  168,  164,  168,  168,  168,
          168,  168,  168,  168,  168,  168,  168,  168,  168,  168,
          168,  168,  168,  168,  168,  168,  168,  168,  168,  168,
          168,  168,  168,  160,   43,  161,   65,  168,  168,  168,
          168,  168,  168,  168,  168,  168,  168,  168,  168,  168,
          168,  168,  168,  168,  168,  168,  168,  168,  168,  168,
          168,  168,  168,  168,  168,  168,  168,  168,  168,  168,
          168,  168,  168,  168,  168,  168,  168,  168,  168,  168,
          168,  168,  168,  168,  168,  168,  168,  168,  168,  168,
          168,  168,  168,  168,  168,  168,  168,  168,  168,  168,
          168,  168,  168,  168,  168,  168,  168,  168,  168,  168,
          168,  168,  168,  168,  168,  168,  168,  168,  168,  168,
          168,  168,  168,  168,  168,  168,  168,  168,  168,  168,
          168,  168,  168,  168,  168,  168,  168,  168,  168,  168,
          168,  168,  168,  168,  168,  168,  168,  168,  168,  168,
          168,  168,  168,  168,  168,  168,  168,  168,  168,  168,
          168,  168,  168,  168,  168,  168,    1,    2,    3,    4,
            5,    6,    7,    8,    9,   10,   11,  168,   12,   13,
           14,   15,   16,   18,   19,   20,   21,   22,   23,   24,
           26,   27,   28,   29,   30,   31,   32,   33,   34,   35,
           36,   37,   40,   41,   42,   46,   47,   48,   49,   50,
           52,   54,   55,   56,   64,   66,   67,   68,   69,   70,
           71,   72,   73,   74,   76,   78,   79,   80,   81,   82,
           83,   84,   85,   86,   87,   88,   89,   90,   91,  168,
          168,   92,   93,   94,   95,   96,   97,   98,   99,  100,
          101,  102,  103,  104,  105,  106,  107,  108,  109,  110,
          111,  112,  113,  114,  115,  116,  117,  118,  119,  120,
          121,  122,  123,  124,  125,  126,  127,  128,  129,  130,
          131,  132,  133,  134,  135,  136,  137,  138,  139,  140,
          141,  142,  143,  144,  145,  146,  147,  148,  168,  168,
          168,  168,  168,  168,  149,  150,  151,  152,  153,  154,
          155,  156,  157,  158
    );

    protected $action = array(
          697,  698,  699,  700,  701,   97,   98,   99,   76,-32766,
            0, 1227,   77,   78,   79,  842,  702,  703,  704,  740,
          741,-32767,-32767,-32767,-32767,   95,   96,   97,   98,   99,
          269,  270,   28, -449,   80,   81,   82,   83,   84,   85,
           86,   87,   88,   89,   90,   91,   92,   93,   94,   95,
           96,   97,   98,   99,  100,  101,  102, -496,  277,   16,
        -32766, -459,  705,   30,-32766,-32766,-32766, -264,-32766,-32766,
          103, -216,  547,-32766,-32766, 1189,  706,  707,  708,  709,
          710,  711,  712,-32766,-32766,  772,-32766,-32766,-32766,-32766,
        -32766,-32766,  713,  714,  715,  716,  717,  718,  719,  720,
          721,  722,  723, -233,  743,  744,  745,  746,  747,  735,
          736,  737,  738,  739,  724,  725,  726,  727,  728,  729,
          730,  766,  767,  768,  769,  770,  771,  731,  732,  733,
          734,  764,  755,  753,  754,  750,  751,  320,  742,  748,
          749,  756,  757,  759,  758,  760,  761, 1208, 1207, 1206,
         -519,  237,  752,  763,  762,   46,   47,  453,   48,   49,
        -32766,  248,-32766, 1228,-32766,-32766,-32766, -160,  456,  457,
        -32766,  788,  789,  833,   50,   51,-32766,   52,  308, -449,
        -32766,-32766,-32766, -159,-32766, -415,-32766,-32766,-32766,-32766,
        -32766,-32766,-32767,-32767,-32767,-32767,-32767, 1087, 1088,  548,
        -32766,  937,-32766,-32766,-32766,-32766,-32766, -459,-32766, -459,
           53,   54,-32766,-32766,-32766,  390,   55,  118,   56,  232,
          233,   57,   58,   59,   60,   61,   62,   63,   64,-32766,
           23,  274,   65,  407,  647,-32766,   22,-32766, 1087, 1088,
          774,  843,  460,-32766,-32766,   26, 1086, 1122,  434, -233,
         -415,  454,-32766,  455, 1122, 1092, 1093, 1094, 1095, 1089,
         1090,  282,  256,  240,  124,  237,  411, 1096, 1091,  920,
          962,  963,  964,  961,  960,  959,  486, 1164,  296, 1166,
         1165,  225,-32766,  223,  471,  472,-32766,-32766,-32766, -458,
          334,  890, -417,  475,  476,  307, 1092, 1093, 1094, 1095,
         1089, 1090,  282,  522, -519,   45,-32766,  487, 1096, 1091,
          409,  116, -415, -160,  423,   67,  424,  293,  125,  296,
          318,  458, -122, -122, -122,  318, -415,  459,  405, -159,
          120,  832,  318, -415,   37,   11,  461, -122,  462, -122,
          463, -122,  464, -122,  307,  127,  465, -122, -122, -122,
           38,   39,  466,  408,  130,   40,  467, -417,  475,   66,
          431, 1100,  331,  332,  468,  469,   -4,  843,  247,  435,
          470, -415,  257,  818,  861,  473,  474,  454,  124,  455,
          302, 1135,  921, 1212,   29,  104,  105,  106,  107,  108,
          109,  110,  111,  112,  113,  114,  115,  604,   12,  845,
          658, -122,  316,   15,  936, 1122,  100,  101,  102,  312,
          277,  891,  962,  963,  964,  961,  960,  959,  954, -417,
          268,  307,  103, -212,-32766,  991,  993, 1138,-32766,-32766,
        -32766,  326,  829, -417, 1156, -458, -415, -458, 1161, 1066,
         -417,-32766, -420,  397,  633,-32766,-32766,  458,-32766,  843,
        -32766,-32766,-32766,  459,  126,  330,  787,  832,  830,  454,
           37,   11,  461,  309,  462,  529,  463,  262,  464,  121,
          487,  300,  465,  409, 1059,  306,   38,   39,  466,  408,
          398,   40,  467,  318,  298,   66,  292,  663,  331,  332,
          468,  469,  239,   27,  235,  843,  470, 1186, -415,  780,
          861,  473,  474, 1172,-32766,  454,    9,  308,-32766,-32766,
        -32766,  634, -415,  416,  409,   31,  660,-32766,  940, -415,
          314,-32766,-32766,-32766,  267,  845,  658,   -4,-32766,  458,
        -32766,-32766,  122,  664,  129,  459,   44, -416,  132,  832,
          134,  843,   37,   11,  461,  135,  462,  137,  463,   42,
          464,  454,  487,  139,  465,  409,  618,  619,   38,   39,
          466,  133,  343,   40,  467,  417,  207,   66,  788,  789,
          331,  332,  266,  596,  597,  458,  468,  469,  470,  665,
          854,  459,  781,  661,  271,  832,  861,  843,   37,   11,
          461,  532,  462,  573,  463,  671,  464,  454,  301,  678,
          465,  841, -416,  131,   38,   39,  466,  845,  658,   40,
          467,  299,  340,   66,  123,  234,  331,  332,  236,  119,
          258,  458,  951,  679,  470,  666,  238,  459,  939,  690,
          259,  832,  117,  843,   37,   11,  461, 1218,  462,  260,
          463,  261,  464,  454, 1216, 1215,  465,  277,  103, 1187,
           38,   39,  466,  845,  658,   40,  467,   43,  628,   66,
          520,  536,  331,  332, -416,  333,  575,  458,-32766,  341,
          470,  672,  402,  459,  403,  610,  415,  832, -416,  843,
           37,   11,  461,  494,  462, -416,  463, -419,  464,  454,
          488,  495,  465,  515,  516,  521,   38,   39,  466,  877,
          658,   40,  467,  539,  557,   66,  561,  584,  331,  332,
          588,  774,  264,  458,  775,  801,  470, 1236, 1122,  459,
         1159,  646,  363,  832,  613,  632,   37,   11,  461,  657,
          462, 1062,  463,  599,  464, 1228,  605,  526,  465,  629,
          456,  457,   38,   39,  466,  845,  658,   40,  467,  265,
          609,   66, 1066,  -80,  331,  332,   20,  542,  222,  458,
          862,  774,  470,  399,  622,  459,  595, -375,  414,  832,
          356,  418,   37,   11,  461,  442,  462,  446,  463,  311,
          464,  313,  863,  487,  465,   33,  409,  310,   38,   39,
          466,  845,  658,   40,  467,  856,  318,   66,  315,  475,
          331,  332,   23,  393,    3,    0, 1099,    0,  470,    0,
            0,    0,  774, 1102, 1122,  489,  915,-32766, 1086,   19,
          339,-32766,-32766,-32766,   35,  372,  373,  379,  487,  416,
          528,  409,  391,  392, -213, 1195,  490,  845,  658, 1197,
          395,-32766,   36,-32766,-32766,-32766,-32766,  687, 1066,  688,
          786, 1235,  826,  827,  840,  828,  834,  823,  893,  878,
          884, 1177,  885,  821,  875,  873,  476,  946,  947,  944,
          831,  943,  784,  785,  839,  945,    0,  659,  667,  487,
          669,  670,  409,  674,  675, -212,  676,   69,  677,  680,
          682,  684,  318,  685,  689,  691,   75,  304,  305,  388,
          389,  662,    0,  681,  819, 1238, 1163,  783,  782, 1191,
         1222, 1162, 1221,  850,  857, 1053, 1225, 1054, 1226,  848,
          952,  882,  883,  860,  859,  858, 1055, 1219, 1220,  792,
          793,  790,  791, 1160, 1123, 1116, 1128, 1133, 1136,    0,
         -442, -440, -420, -419, -418,   21,   24,   25,   32,   34,
           41,   68,   70,   71,   72,   73,   74,  128,  136,  138,
          224,  230,  231,  249,  251,    0,  252,  253,  254,  294,
          295,  317,  396,  401,  250,    0,    5,    6,    7,  436,
          439,  441,  443,  444,  447,  448,  451,  642, 1237, 1076,
         1084, 1183, 1217, -508, -507,  568, 1030, -216,    4,    8,
           13,  281,  342,  563,  590,  645, 1034, 1031,    0, -386,
         1047,    0, 1085, 1114, 1115, 1127, 1158,  602,    0, 1101
    );

    protected $actionCheck = array(
            2,    3,    4,    5,    6,   57,   58,   59,   14,   55,
            0,   13,   18,   19,   20,    1,   18,   19,   20,   21,
           22,   51,   52,   53,   54,   55,   56,   57,   58,   59,
          104,  105,   38,   17,   40,   41,   42,   43,   44,   45,
           46,   47,   48,   49,   50,   51,   52,   53,   54,   55,
           56,   57,   58,   59,   60,   61,   62,    7,   64,   17,
           14,   17,   64,    7,   18,   19,   20,  113,  114,   14,
           76,    9,   12,   18,  120,    9,   78,   79,   80,   81,
           82,   83,   84,  129,   38,   87,   40,   41,   42,   43,
           44,   45,   94,   95,   96,   97,   98,   99,  100,  101,
          102,  103,  104,   17,  106,  107,  108,  109,  110,  111,
          112,  113,  114,  115,  116,  117,  118,  119,  120,  121,
          122,  123,  124,  125,  126,  127,  128,  129,  130,  131,
          132,  133,  134,  135,  136,  137,  138,   77,  140,  141,
          142,  143,  144,  145,  146,  147,  148,  126,  127,  128,
            9,   45,  154,  155,  156,    2,    3,    4,    5,    6,
           14,    8,   14,   10,   18,   19,   20,   17,   15,   16,
           55,  113,  114,  159,   21,   22,   14,   24,   55,  163,
           18,   19,   20,   17,   38,   12,   40,   41,   42,   43,
           44,   45,   46,   47,   48,   49,   50,   85,   86,  139,
           38,  159,   40,   41,   42,   43,   44,  163,   14,  165,
           57,   58,   18,   19,   20,  157,   63,   23,   65,   66,
           67,   68,   69,   70,   71,   72,   73,   74,   75,  114,
           77,   78,   79,   80,   87,  120,   17,  114,   85,   86,
           87,    1,   89,  120,  129,   17,   93,   89,   39,  163,
           77,   11,  129,   13,   89,  143,  144,  145,  146,  147,
          148,  149,   17,   45,  158,   45,  113,  155,  156,  163,
          123,  124,  125,  126,  127,  128,  123,   87,  166,   89,
           90,   17,   14,   23,  131,  132,   18,   19,   20,   17,
           17,   39,   12,  140,  141,   55,  143,  144,  145,  146,
          147,  148,  149,   92,  163,   17,   38,  154,  155,  156,
          157,   25,  139,  163,   17,  162,   17,  164,  160,  166,
          167,   81,   82,   83,   84,  167,  153,   87,   17,  163,
           17,   91,  167,  160,   94,   95,   96,   97,   98,   99,
          100,  101,  102,  103,   55,   17,  106,  107,  108,  109,
          110,  111,  112,  113,   77,  115,  116,   77,  140,  119,
           17,  150,  122,  123,  124,  125,    0,    1,   17,  160,
          130,   12,   17,  133,  134,  135,  136,   11,  158,   13,
           17,   87,  163,  163,   25,   26,   27,   28,   29,   30,
           31,   32,   33,   34,   35,   36,   37,   82,   83,  159,
          160,  161,   17,  114,  159,   89,   60,   61,   62,  120,
           64,  159,  123,  124,  125,  126,  127,  128,  129,  139,
           17,   55,   76,  163,   14,   66,   67,  163,   18,   19,
           20,   89,  159,  153,   92,  163,   77,  165,  161,  123,
          160,   14,  162,   17,   87,   18,   19,   81,   38,    1,
           40,   41,   42,   87,  160,   17,  159,   91,  159,   11,
           94,   95,   96,   17,   98,   13,  100,   17,  102,   25,
          154,   12,  106,  157,  163,   17,  110,  111,  112,  113,
          114,  115,  116,  167,   12,  119,  120,   39,  122,  123,
          124,  125,   17,  151,  152,    1,  130,   56,  139,  133,
          134,  135,  136,   53,   14,   11,  163,   55,   18,   19,
           20,  154,  153,  157,  157,   23,  160,   14,  161,  160,
          154,   18,   19,   20,   23,  159,  160,  161,   38,   81,
           40,   41,   25,   39,   25,   87,   77,   12,   25,   91,
           25,    1,   94,   95,   96,   25,   98,   25,  100,   77,
          102,   11,  154,   25,  106,  157,   82,   83,  110,  111,
          112,  108,  109,  115,  116,  113,   25,  119,  113,  114,
          122,  123,   25,  117,  118,   81,  124,  125,  130,   39,
           45,   87,  159,  160,   39,   91,  134,    1,   94,   95,
           96,   39,   98,   39,  100,   39,  102,   11,  139,   39,
          106,   39,   77,   39,  110,  111,  112,  159,  160,  115,
          116,  139,  153,  119,   39,   45,  122,  123,   45,  160,
           51,   81,  159,  160,  130,   39,   45,   87,  159,  160,
           51,   91,  160,    1,   94,   95,   96,   53,   98,   51,
          100,   51,  102,   11,   53,   53,  106,   64,   76,   56,
          110,  111,  112,  159,  160,  115,  116,   77,   84,  119,
           89,   96,  122,  123,  139,   87,   89,   81,   92,   87,
          130,   39,   87,   87,   87,  107,   87,   91,  153,    1,
           94,   95,   96,   87,   98,  160,  100,  162,  102,   11,
           16,   87,  106,   87,   87,   87,  110,  111,  112,  159,
          160,  115,  116,   87,   87,  119,   87,   87,  122,  123,
           87,   87,   38,   81,   87,   87,  130,   87,   89,   87,
           87,   99,   88,   91,   89,   89,   94,   95,   96,   89,
           98,   89,  100,   89,  102,   10,   97,   92,  106,  101,
           15,   16,  110,  111,  112,  159,  160,  115,  116,   75,
          103,  119,  123,  104,  122,  123,  104,  104,  104,   81,
          134,   87,  130,  134,  107,   87,  120,  153,  113,   91,
          157,  113,   94,   95,   96,  113,   98,  113,  100,  138,
          102,  121,  134,  154,  106,  160,  157,  137,  110,  111,
          112,  159,  160,  115,  116,  158,  167,  119,  137,  140,
          122,  123,   77,  160,  153,   -1,  150,   -1,  130,   -1,
           -1,   -1,   87,  150,   89,  141,  142,   14,   93,  153,
          153,   18,   19,   20,  159,  157,  157,  157,  154,  157,
          157,  157,  157,  157,  163,  158,  162,  159,  160,  158,
          160,   38,  159,   40,   41,   42,   43,  159,  123,  159,
          159,  159,  159,  159,  159,  159,  159,  159,  159,  159,
          159,  159,  159,  159,  159,  159,  141,  159,  159,  159,
          159,  159,  159,  159,  159,  159,   -1,  160,  160,  154,
          160,  160,  157,  160,  160,  163,  160,  162,  160,  160,
          160,  160,  167,  160,  160,  160,  160,  160,  160,  160,
          160,  160,   -1,  161,  161,  161,  161,  161,  161,  161,
          161,  161,  161,  161,  161,  161,  161,  161,  161,  161,
          161,  161,  161,  161,  161,  161,  161,  161,  161,  161,
          161,  161,  161,  161,  161,  161,  161,  161,  161,   -1,
          162,  162,  162,  162,  162,  162,  162,  162,  162,  162,
          162,  162,  162,  162,  162,  162,  162,  162,  162,  162,
          162,  162,  162,  162,  162,   -1,  162,  162,  162,  162,
          162,  162,  162,  162,  162,   -1,  163,  163,  163,  163,
          163,  163,  163,  163,  163,  163,  163,  163,  163,  163,
          163,  163,  163,  163,  163,  163,  163,  163,  163,  163,
          163,  163,  163,  163,  163,  163,  163,  163,   -1,  164,
          164,   -1,  165,  165,  165,  165,  165,  165,   -1,  166
    );

    protected $actionBase = array(
            0,  240,  366,  158,  494,  586,  632,  586,  448,  540,
          357,  678,  678,  678,  716,   -2,   -2,   -2,   -2,   -2,
          147,  106,  220,  570,  570,  570,  570,  634,  575,  573,
          741,  581,  153,  153,  153,  153,  153,  153,  153,  153,
          153,  153,  153,  153,  153,  153,  153,  153,  153,  153,
          153,  153,  153,  153,  153,  153,  153,  153,  153,  153,
          153,  153,  153,  153,  153,  153,  153,  153,  153,  153,
          153,  153,  153,  153,  153,  153,  153,  153,  153,  153,
          153,  153,  153,  153,  153,  153,  153,  153,  153,  153,
          153,  153,  153,  153,  153,  153,  153,  153,  153,  153,
          153,  153,  153,  153,  153,  153,  153,  153,  153,  153,
          153,  153,  153,  153,  153,  153,  153,  153,  153,  153,
          153,  153,  153,  153,  153,  153,  153,  153,  153,  153,
          153,  153,  153,  153,  153,  153,  153,  153,  153,  153,
          252,   14,  492,  715,  838,  843,  501,  840,  836,  835,
          654,  839,  844,  772,  773,  564,  774,  775,  776,  777,
          841,  852,  837,  842,   -6,   -6,   -6,   -6,   -6,   -6,
           -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,
           -6,   -6,   -6,   -6,   -6,  148,   55,  194,  427,  503,
          503,  503,  503,  503,  503,  503,  503,  503,  503,  503,
          503,  503,  503,  503,  503,  503,  503,  112,  268,  268,
          268,  490,  410,  803,  359,  162,   46,  146,  146,  146,
          146,  146,  218,  218,  659,  659,  -30,  -30,  -30,  -30,
          725,  725,  725,  725,  725,  725,  725,  725,  725,  725,
          725,  762,  763,  764,  765,  766,  767,  141,   62,  834,
          834,  834,  834,  834,  677,  644,  644,  681,  674,  674,
          674,  674,  674,  674,  674,  674,  674,  674,  674,  674,
          674,  674,  -52,  -52,  629,  123,  -46,  316,  452,  115,
          280,  525,  211,  663,  853,  173,  173,  459,  346,  346,
          346,  173,   58,  645,  830,  830,  342,  342,  294,  294,
          294,  294,  831,  472,  455,  455,  455,  398,  398,  398,
          398,  398,  398,  398,  356,  398,  398,  398,  736,  576,
          190,  568,  760,  469,  657,  761,   60,   44,  272,  675,
          676,  165,  655,  661,  165,  456,  315,  474,  614,  165,
          165,  812,  209,  252,  463,  463,  441,  583,  711,  582,
          297,  713,  273,  299,  423,  343,  737,  714,  832,  166,
          833,   16,  264,  277,  583,  583,  583,  219,  593,  584,
          591,  592,  738,  739,   86,  -74,  450,  260,  768,  740,
          150,  769,  770,   42,  245,  771,  311,  712,  624,  624,
          624,  624,  624,  623,  624,  623,  535,  624,  607,  783,
          783,  616,  569,  569,  569,  535,  569,  788,  535,  624,
          783,  535,  535,  228,  535,  650,  624,  535,  535,  637,
          288,  328,  661,  607,  571,  641,  661,  783,  783,  783,
          641,  616,  641,  661,  688,  690,  646,  641,  623,  545,
          545,  646,  535,  545,  545,  545,  535,  545,  545,  535,
          637,  545,   10,  789,  596,  604,  786,  625,  790,  562,
           50,  791,  787,  792,  811,  793,  606,  717,  626,  648,
          799,  800,  794,  608,  589,  798,  784,  673,  691,  578,
          286,  651,  580,  782,   56,  692,  655,  672,  579,  588,
          658,  590,   66,  351,  547,  552,  785,  572,  572,  572,
          580,  780,  572,  572,  572,  572,  572,  572,  572,  572,
          847,  667,  565,  693,  694,  695,  444,  696,  613,  653,
          507,  729,  656,  673,  673,  743,  845,  846,  627,  617,
          585,  801,  619,  825,  744,  826,  795,  665,  313,  509,
          742,  668,  628,  669,  802,  730,  827,  630,  633,  745,
          673,  746,  572,  779,  778,  848,  849,  554,  587,  806,
          577,  643,  828,  781,  850,  804,  816,  670,  697,  385,
          851,  747,  731,  620,  748,  513,  733,  683,  813,  817,
          818,  662,  385,  734,  680,  805,  355,  819,  541,  749,
          698,  639,  671,  647,  820,  810,  809,  718,  515,  520,
          635,  664,  750,  735,  796,  699,  814,  815,  722,  700,
          701,  720,  721,  522,  751,  821,  829,  702,  797,  556,
          574,  638,  703,  723,  642,  636,  752,  724,  704,  705,
          753,  754,  824,  649,  672,  666,  660,  652,  807,  726,
          622,  755,  728,  756,  808,  560,  706,  708,  709,  822,
          363,  757,  758,  710,  823,  640,  759,  528,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,  153,  153,   -2,  153,  153,  153,  153,
          153,  153,   -2,  153,  153,  153,   -2,    0,    0,    0,
            0,    0,   -2,  153,  153,  153,  153,  153,  153,  153,
          153,  153,  153,  153,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0,   -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,
           -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,
           -6,   -6,   -6,   -6,   -6,   -6,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,   -6,   -6,   -6,
           -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,
           -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,   -6,  725,
           -6,   -6,   -6,   -6,   -6,   -6,    0,   -6,   -6,   -6,
           -6,   -6,   -6,   -6,  725,  725,  725,  725,  346,  346,
          346,  346,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,  289,  289,  289,  289,  289,  289,  674,
          674,  674,  674,  674,  674,  674,  674,  674,  674,  674,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0,  346,  346,  624,  289,  289,  624,
            0,  289,    0,    0,  342,  342,  342,    0,    0,    0,
            0,    0,    0,    0,  624,  342,   21,   21,    0,    0,
          165,  165,  165,  165,   21,    0,  624,  624,  624,  624,
          624,  624,  624,  624,  624,  624,  624,  624,  624,  624,
          165,  342,    0,  453,  453,  385,  453,  453,    0,    0,
            0,  624,  624,    0,  571,  569,    0,    0,    0,    0,
          783,    0,    0,  569,    0,    0,    0,    0,  446,  572,
          313,  801,    0,  438,    0,    0,    0,    0,  627,  438,
          475,    0,  475,    0,    0,    0,  572,  572,  572,    0,
          446,  403,  403,  403,  627,  627,    0,    0,    0,    0,
          458,  627,    0,  458,  426,    0,    0,  426,    0,  385
    );

    protected $actionDefault = array(
            3,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,  452,  452,  452,  412,32767,32767,32767,
        32767,32767,  547,  552,  279,  279,  279,32767,  413,  413,
          413,  413,  413,  413,  413,  412,32767,32767,32767,32767,
        32767,  357,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,  412,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,  457,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,  340,  341,  343,  344,  278,  414,
          555,  232,  498,  456,  277,  116,  241,  234,  554,  189,
          220,  119,  276,  518,  512,  539,  305,  358,  307,  356,
          360,  306,  283,  287,  288,  289,  290,  291,  292,  293,
          294,  295,  296,  297,  298,  282,  359,32767,  337,  336,
          335,  303,  304,  308,  281,  310,  309,  326,  327,  324,
          325,  328,32767,32767,  451,  451,  329,  330,  331,  332,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,  263,  263,  263,  263,  263,  263,  224,  224,  224,
          224,  224,  224,  224,  502,32767,32767,32767,32767,32767,
        32767,32767,32767,  224,32767,32767,32767,32767,32767,32767,
        32767,32767,  317,  318,32767,  263,  261,32767,32767,  264,
          405,  334,32767,32767,32767,  300,  302,  380,  312,  313,
          311,  284,32767,  385,  513,  513,32767,  387,32767,32767,
        32767,32767,  513,  382,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,  465,  415,  415,32767,
        32767,32767,  374,  172,32767,  157,  208,  210,  390,32767,
        32767,32767,32767,32767,32767,32767,32767,  322,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,  415,
        32767,  415,32767,32767,  314,  315,  316,32767,32767,32767,
        32767,32767,32767,32767,  415,  475,32767,  415,32767,32767,
          415,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,  488,32767,  488,  161,32767,32767,  388,
          388,32767,  481,  481,  481,  161,  481,  383,  161,32767,
        32767,  161,  161,  411,  161,  174,32767,  161,  161,  163,
          411,  411,  172,32767,32767,  176,  172,32767,  537,  429,
          176,32767,  176,  172,  194,  194,  366,  176,  489,  226,
          226,  366,  161,  226,  226,  226,  161,  226,  226,  161,
          163,  226,32767,32767,32767,32767,32767,32767,32767,   82,
          430,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,  376,32767,32767,
        32767,32767,  406,  427,32767,32767,  374,32767,32767,  222,
        32767,  221,32767,  215,32767,32767,  490,  320,  321,  323,
        32767,  417,  345,  346,  347,  348,  349,  350,  351,  353,
        32767,  379,32767,32767,32767,32767,32767,32767,   84,  108,
          240,32767,  464,   84,  377,32767,  464,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,  280,32767,
        32767,   84,32767,   84,32767,32767,32767,32767,32767,  415,
          378,32767,  319,  391,  433,32767,32767,32767,32767,32767,
        32767,32767,32767,  416,32767,32767,32767,   84,32767,  175,
        32767,32767,32767,32767,32767,  219,32767,32767,32767,32767,
        32767,32767,  177,32767,32767,32767,  504,32767,32767,32767,
        32767,32767,  415,32767,32767,32767,32767,32767,32767,  275,
        32767,32767,32767,32767,32767,32767,32767,32767,  415,32767,
        32767,32767,32767,  517,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
        32767,32767,32767,   82,   60,32767,  257,32767,32767,32767,
        32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
          506,32767,32767,32767,32767,32767,32767,  511,  121,  121,
            3,    3,  121,  121,  121,  121,  121,  121,  121,  121,
          121,  121,  121,  121,  121,  121,  121,  121,  121,  121,
          243,  154,  243,  202,  243,  243,  205,  194,  194,  243,
          249,  243
    );

    protected $goto = array(
          171,  171,  142,  142,  142,  142,  153,  155,  192,  172,
          173,  146,  170,  168,  168,  168,  168,  169,  169,  169,
          169,  169,  169,  169,  146,  164,  165,  166,  167,  189,
          187,  190,  497,  498,  347,  499,  502,  503,  504,  505,
          506,  507,  508,  509,  978,  143,  144,  145,  147,  148,
          149,  150,  151,  152,  154,  185,  186,  188,  191,  208,
          211,  212,  213,  215,  216,  217,  218,  219,  220,  221,
          226,  227,  228,  229,  272,  273,  288,  289,  290,  364,
          365,  366,  552,  193,  194,  195,  196,  197,  198,  199,
          200,  201,  202,  203,  204,  205,  156,  206,  157,  174,
          175,  176,  209,  177,  158,  159,  178,  160,  179,  161,
          210,  180,  140,  181,  182,  162,  183,  163,  184,  635,
          540,  278,  278,  574,  686,  591,  593,  621,  626,  889,
          630,  631,  903,  640,  888,  641,  643,  651,  652,  899,
          656, 1192,  600,  600, 1193,  375, 1175, 1175, 1175,  375,
          518, 1213, 1214, 1233, 1243, 1176, 1168, 1169,  919,  554,
          322,  778,  523,  523,  523,  779, 1107,  511,  815,  777,
          511,  892,  523,  872,  297,  683,  836,  284,  512,  901,
          896,  377,  608,  361,  361,   14,  802,  543,  523,  359,
          359,  285,  286,  327,  549,  291,  374,  328,  380,  592,
          500,  500,  500,  500,  906,  906, 1142, 1142,  500,  500,
          500,  500,  500,  500,  500,  500,  500,  500,  500,  501,
          501,  501,  501,  802,  802,  876, 1063,  501,  501,  501,
          501,  501,  501,  501,  501,  501,  501,  501,  514,  517,
          535,  555,  556,  564, 1152, 1152,  523,  523,  541,  567,
          523,  809,  523,  426,  648,  523,  349, 1146, 1152,  531,
          419,  565,  544, 1153, 1153,  558,  559,  524,  612,  546,
          562,  616,  623,  627,  550,  639,  344, 1153,  923,  345,
         1155,  348,  795,  795,  803,  803,  803, 1241,  805,  553,
           17,  794,  577,  606,   18,  617,  950,  450, 1064,  242,
          653,  243,  244,  404,  406,  948,  245,  607,  246,  566,
          579,  580,  594,  615,  430, 1065, 1232, 1118,  432,  576,
         1139,  583,  429, 1234, 1129,  437,  603,  585,  638,  360,
          644,  582,  323,  387,  370,  371, 1240, 1245,  551,  571,
          910,  966, 1171,  279,  449,  601, 1025,  329,  654,  530,
         1202,  381,  368,  798, 1185,  354,  491,  491,  491,  491,
          491,  491,  491,  491,  491,  491,  491,  491,  491,  491,
          491,  491,  491,  491,  491,  491,  491,  491,  491,  491,
          491,  357,  668, 1067,  796,  927, 1067, 1224,  385,  614,
         1056, 1061,  806,  880,  930, 1179,  445,  655,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0,  324,  325,    0,    0,  496,  496,  496,  870,
          870,  870,  870,    0,  865,  871,  625,    0,    0,    0,
         1126,    0,    0, 1126,    0,    0,    0,    0,    0,    0,
            0,  958,    0,    0,  958,    0,    0,    0,    0,    0,
            0,    0,    0,    0, 1137, 1137, 1137, 1137,    0,    0,
            0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
            0,    0,    0,    0, 1124,    0,    0,    0,    0,    0,
            0,    0,    0,    0,    0,    0,    0,  929,    0,    0,
          929,    0,    0,    0,    0, 1130, 1131
    );

    protected $gotoCheck = array(
           23,   23,   23,   23,   23,   23,   23,   23,   23,   23,
           23,   23,   23,   23,   23,   23,   23,   23,   23,   23,
           23,   23,   23,   23,   23,   23,   23,   23,   23,   23,
           23,   23,   23,   23,   23,   23,   23,   23,   23,   23,
           23,   23,   23,   23,   23,   23,   23,   23,   23,   23,
           23,   23,   23,   23,   23,   23,   23,   23,   23,   23,
           23,   23,   23,   23,   23,   23,   23,   23,   23,   23,
           23,   23,   23,   23,   23,   23,   23,   23,   23,   23,
           23,   23,   23,   23,   23,   23,   23,   23,   23,   23,
           23,   23,   23,   23,   23,   23,   23,   23,   23,   23,
           23,   23,   23,   23,   23,   23,   23,   23,   23,   23,
           23,   23,   23,   23,   23,   23,   23,   23,   23,   51,
           28,  134,  134,   28,   28,   28,   28,   28,   28,   28,
           28,   28,   28,   28,   28,   28,   28,   28,   28,   28,
           28,   72,   72,   72,   72,   72,   72,   72,   72,   72,
            8,   72,   72,   72,   72,   72,   72,   72,   72,   77,
           63,   11,    8,    8,    8,   12,   45,  106,   10,   10,
          106,   10,    8,   10,  109,   10,   44,  109,   10,   10,
           10,   45,   45,   45,   45,   87,   19,    8,    8,   45,
           45,   45,   45,   45,   45,   45,   45,   45,   45,   45,
          110,  110,  110,  110,   68,   68,   68,   68,  110,  110,
          110,  110,  110,  110,  110,  110,  110,  110,  110,  111,
          111,  111,  111,   19,   19,   29,   73,  111,  111,  111,
          111,  111,  111,  111,  111,  111,  111,  111,   38,   38,
           38,   38,   38,   38,  121,  121,    8,    8,    8,    8,
            8,   25,    8,  126,    5,    8,   52,  120,  121,   52,
           52,  126,   52,  122,  122,   52,   52,    8,   55,  112,
          112,   55,   55,   55,    8,   55,   55,  122,   75,   55,
          121,   41,   19,   19,   19,   19,   19,  147,   19,    7,
           52,   19,   35,   35,   52,   95,    7,   52,   73,   59,
            7,   59,   59,    7,    7,    7,   59,   43,   59,   54,
           54,   54,   54,   54,   57,   73,   73,   73,   57,   58,
          118,   58,  115,  115,  115,   57,   58,  127,  127,   42,
          127,   61,   61,   61,  128,  128,  113,  113,    2,    2,
           70,   91,  124,   89,   71,   90,   93,   14,  139,   56,
          141,   18,  133,   21,  132,    9,   51,   51,   51,   51,
           51,   51,   51,   51,   51,   51,   51,   51,   51,   51,
           51,   51,   51,   51,   51,   51,   51,   51,   51,   51,
           51,   13,   65,   51,   20,   76,   51,   88,   17,  131,
           99,  101,   22,   62,   78,  129,   97,   53,   -1,   -1,
           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
           -1,   -1,   63,   63,   -1,   -1,   51,   51,   51,   51,
           51,   51,   51,   -1,   51,   51,   51,   -1,   -1,   -1,
           77,   -1,   -1,   77,   -1,   -1,   -1,   -1,   -1,   -1,
           -1,   87,   -1,   -1,   87,   -1,   -1,   -1,   -1,   -1,
           -1,   -1,   -1,   -1,   77,   77,   77,   77,   -1,   -1,
           -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
           -1,   -1,   -1,   -1,   77,   -1,   -1,   -1,   -1,   -1,
           -1,   -1,   -1,   -1,   -1,   -1,   -1,   77,   -1,   -1,
           77,   -1,   -1,   -1,   -1,   77,   77
    );

    protected $gotoBase = array(
            0,    0, -322,    0,    0,  234,    0,  286, -142,   41,
          167,  159,  163,   52,   55,    0,    0,   -1,   46, -106,
           54,   47,  -31,  -21,    0,  235,    0,    0, -539,  216,
            0,    0,    0,    0,    0,  257,    0,    0,  199,    0,
            0,  244,   98,   84,  169,  -41,    0,    0,    0,    0,
            0,  109, -152,  -53,   60, -172,   71, -108, -111, -383,
            0,   20,  -38, -275,    0,   39,    0,    0,  -18,    0,
           93,   81, -113, -112,    0,  256,   51,  156,  -30,    0,
            0,    0,    0,    0,    0,    0,    0,  165,   42,   68,
           70,   85,    0,   69,    0,   88,    0,  -45,    0,  -10,
            0,  -14,    0,    0,    0,    0, -107,    0,    0, -119,
          -22,   -3,  245,  -84,    0,   23,    0,    0,   95,    0,
          231,  -39,  -20,    0,   80,    0,  -80,  -76,   74,  -43,
            0,   -6,   45,   44,  120,    0,    0,    0,    0,   53,
            0,   48,    0,    0,    0,    0,    0,  242,    0
    );

    protected $gotoDefault = array(
        -32768,  452,  693,    2,  694,  765,  773,  598,  477,  519,
          874,  816,  817,  351,  394,  478,  350,  382,  378,  804,
          797,  799,  807,  141,  383,  810,    1,  812,  525,  844,
          336,  820,  337,  620,  822,  537,  824,  825,  513,  352,
          353,  538,  358,  578,  835,  214,  355,  837,  335,  838,
          847,  338,  624,  560,  492,  611,  479,  425,  572,  241,
          545,  569,  879,  321,  887,  673,  895,  898,  480,  493,
          909,  412,  917, 1081,  367,  922,  928, 1113,  931,  934,
          255,  384,  938,   10,  942,  636,  637,  957, 1223,  276,
          581,  965,  977,  400, 1044, 1046,  527,  440, 1057,  422,
          386, 1060, 1117,  410,  481,  427, 1073,  287,  303,  283,
          482,  280,  510, 1145,  483,  428, 1120,  362, 1140,  413,
         1147, 1154,  319,  570, 1170,  376, 1174,  433,  369, 1178,
          438,  589, 1184,  346,  275,  484, 1230,  586,  587,  649,
          650, 1201,  263,  485,  533,  534,  420, 1242,  421
    );

    protected $ruleToNonTerminal = array(
            0,    1,    3,    3,    2,    5,    5,    5,    5,    5,
            5,    5,    5,    5,    5,    5,    5,    5,    5,    5,
            5,    5,    5,    5,    5,    5,    5,    5,    5,    5,
            5,    5,    5,    5,    5,    5,    5,    5,    5,    5,
            5,    5,    5,    5,    5,    5,    5,    5,    5,    5,
            5,    5,    5,    5,    5,    5,    5,    5,    5,    5,
            5,    5,    5,    5,    5,    5,    5,    5,    5,    5,
            5,    5,    5,    6,    6,    6,    6,    6,    6,    6,
            7,    7,    8,    8,    9,    4,    4,    4,    4,    4,
            4,    4,    4,    4,    4,    4,   14,   14,   15,   15,
           15,   15,   17,   17,   13,   13,   18,   18,   19,   19,
           20,   20,   21,   21,   16,   16,   22,   24,   24,   25,
           26,   26,   28,   27,   27,   27,   27,   29,   29,   29,
           29,   29,   29,   29,   29,   29,   29,   29,   29,   29,
           29,   29,   29,   29,   29,   29,   29,   29,   29,   29,
           29,   29,   10,   10,   48,   48,   50,   49,   49,   42,
           42,   52,   52,   53,   53,   11,   12,   12,   12,   56,
           56,   56,   57,   57,   60,   60,   58,   58,   61,   61,
           36,   36,   44,   44,   47,   47,   47,   46,   46,   62,
           37,   37,   37,   37,   63,   63,   64,   64,   65,   65,
           34,   34,   30,   30,   66,   32,   32,   67,   31,   31,
           33,   33,   43,   43,   43,   54,   54,   69,   69,   70,
           70,   72,   72,   72,   71,   71,   55,   55,   73,   73,
           74,   74,   75,   75,   75,   39,   39,   76,   40,   40,
           78,   78,   59,   59,   79,   79,   79,   82,   82,   83,
           83,   84,   84,   84,   84,   84,   85,   86,   86,   88,
           88,   80,   80,   90,   90,   89,   89,   87,   87,   87,
           87,   87,   87,   81,   81,   91,   91,   41,   41,   35,
           35,   23,   23,   23,   23,   23,   23,   23,   23,   23,
           23,   23,   23,   23,   23,   23,   23,   23,   23,   23,
           23,   23,   23,   23,   23,   23,   23,   23,   23,   23,
           23,   23,   23,   23,   23,   23,   23,   23,   23,   23,
           23,   23,   23,   23,   23,   23,   23,   23,   23,   23,
           23,   23,   23,   23,   23,   23,   23,   23,   23,   23,
           23,   23,   23,   23,   23,   23,   23,   23,   23,   23,
           23,   23,   23,   23,   23,   23,   23,   23,   23,   23,
           23,   23,   23,   98,   92,   92,   97,   97,  100,  100,
          101,  102,  102,  102,  106,  106,   51,   51,   51,   93,
           93,  104,  104,   94,   94,   96,   96,   96,   99,   99,
          110,  110,  111,  111,  111,   95,   95,   95,   95,   95,
           95,   95,   95,   95,   95,   95,   95,   95,   95,   95,
           95,  113,  113,   38,   38,  108,  108,  108,  103,  103,
          103,  114,  114,  114,  114,  114,  114,   45,   45,   45,
           77,   77,   77,  116,  107,  107,  107,  107,  107,  107,
          105,  105,  105,  115,  115,  115,   68,  117,  117,  118,
          118,  118,  112,  112,  119,  119,  120,  120,  120,  120,
          109,  109,  109,  109,  122,  121,  121,  121,  121,  121,
          121,  121,  123,  123,  123,  124,  124,  124,  125,  125,
          126,  127,  127,  128,  128,  129,  130,  130,  131,  131,
          132,  132,  133,  133,  134,  134,  135,  135,  136,  136,
          137,  137,  138,  138,  138,  138,  139,  139,  139,  140,
          140,  141,  141,  142,  142,  142,  142,   91,   91,   54,
           73,   72,   72,   72,   72,   72,   72,   12,   12,   12,
           12,   79,   79,   11,   11,    5,   45,   45,   23,   23,
          114,  143,  107,   29,  121,  111,  111,  144,  144,  146,
          146,  147,  145,  145,  148,  148
    );

    protected $ruleToLength = array(
            1,    1,    2,    0,    1,    1,    1,    1,    1,    1,
            1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
            1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
            1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
            1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
            1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
            1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
            1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
            1,    1,    1,    3,    1,    1,    1,    1,    1,    3,
            5,    4,    3,    4,    2,    3,    1,    1,    7,    8,
            6,    7,    3,    1,    3,    1,    3,    1,    1,    3,
            1,    2,    1,    2,    3,    1,    3,    3,    1,    3,
            2,    0,    1,    1,    1,    1,    1,    3,    7,   10,
            5,    7,    9,    5,    3,    3,    3,    3,    3,    3,
            1,    2,    5,    7,    9,    5,    6,    3,    3,    2,
            2,    1,    1,    1,    0,    2,    8,    0,    4,    1,
            3,    0,    1,    0,    1,   10,    7,    6,    5,    1,
            2,    2,    0,    2,    0,    2,    0,    2,    1,    3,
            1,    4,    1,    4,    1,    1,    4,    1,    3,    3,
            3,    4,    4,    5,    0,    2,    4,    3,    1,    1,
            1,    4,    0,    2,    5,    0,    2,    6,    0,    2,
            0,    3,    1,    2,    1,    1,    0,    1,    3,    4,
            6,    1,    1,    1,    0,    1,    0,    2,    2,    3,
            1,    3,    1,    2,    2,    3,    1,    1,    3,    1,
            1,    3,    2,    0,    3,    3,    3,    1,    3,    0,
            2,    4,    5,    4,    4,    4,    3,    1,    1,    1,
            3,    1,    1,    0,    1,    1,    2,    1,    1,    1,
            1,    1,    1,    1,    3,    1,    3,    3,    1,    0,
            1,    1,    3,    3,    4,    1,    2,    3,    3,    3,
            3,    3,    3,    3,    3,    3,    3,    3,    3,    2,
            2,    2,    2,    3,    3,    3,    3,    3,    3,    3,
            3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
            2,    2,    2,    2,    3,    3,    3,    3,    3,    3,
            3,    3,    3,    3,    3,    5,    4,    3,    4,    4,
            2,    2,    4,    2,    2,    2,    2,    2,    2,    2,
            2,    2,    2,    2,    1,    3,    2,    1,    2,    4,
            2,   10,   11,    7,    3,    2,    0,    4,    1,    3,
            2,    2,    2,    4,    1,    1,    1,    2,    3,    1,
            1,    1,    1,    0,    3,    0,    1,    1,    0,    1,
            1,    3,    4,    3,    1,    1,    1,    1,    1,    1,
            1,    1,    1,    1,    1,    1,    1,    3,    2,    3,
            3,    0,    1,    0,    1,    1,    3,    1,    1,    3,
            1,    1,    4,    4,    4,    1,    4,    1,    1,    3,
            1,    4,    2,    3,    1,    4,    4,    3,    3,    3,
            1,    3,    1,    1,    3,    1,    4,    3,    1,    1,
            1,    0,    0,    2,    3,    1,    3,    1,    4,    2,
            2,    2,    1,    2,    1,    1,    4,    3,    3,    3,
            6,    3,    1,    1,    1,    1,    3,    3,    1,    3,
            3,    0,    1,    1,    3,    4,    1,    2,    0,    1,
            1,    4,    1,    3,    3,    4,    1,    3,    3,    5,
            1,    3,    0,    1,    1,    3,    1,    2,    0,    1,
            3,    5,    7,    0,    1,    1,    1,    2,    4,    2,
            4,    2,    2,    4,    4,    8,    4,    8,    9,    8,
            7,   10,   11,   11,   12,    1,    1,    3,    1,    3,
            4,    4,    3,    2,    3,    4,    4,    0,    2,    3,
            1,    3,    0,    2,    3,    1
    );

    protected function reduceRule0() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule1() {
         $this->semValue = $this->handleNamespaces($this->semStack[$this->stackPos-(1-1)]);
    }

    protected function reduceRule2() {
         if (is_array($this->semStack[$this->stackPos-(2-2)])) { $this->semValue = array_merge($this->semStack[$this->stackPos-(2-1)], $this->semStack[$this->stackPos-(2-2)]); } else { $this->semStack[$this->stackPos-(2-1)][] = $this->semStack[$this->stackPos-(2-2)]; $this->semValue = $this->semStack[$this->stackPos-(2-1)]; };
    }

    protected function reduceRule3() {
         $this->semValue = array();
    }

    protected function reduceRule4() {
         $startAttributes = $this->lookaheadStartAttributes; if (isset($startAttributes['comments'])) { $nop = new Stmt\Nop(['comments' => $startAttributes['comments']]); } else { $nop = null; };
            if ($nop !== null) { $this->semStack[$this->stackPos-(1-1)][] = $nop; } $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule5() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule6() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule7() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule8() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule9() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule10() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule11() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule12() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule13() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule14() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule15() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule16() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule17() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule18() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule19() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule20() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule21() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule22() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule23() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule24() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule25() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule26() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule27() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule28() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule29() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule30() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule31() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule32() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule33() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule34() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule35() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule36() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule37() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule38() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule39() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule40() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule41() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule42() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule43() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule44() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule45() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule46() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule47() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule48() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule49() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule50() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule51() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule52() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule53() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule54() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule55() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule56() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule57() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule58() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule59() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule60() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule61() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule62() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule63() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule64() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule65() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule66() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule67() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule68() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule69() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule70() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule71() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule72() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule73() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule74() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule75() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule76() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule77() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule78() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule79() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule80() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule81() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule82() {
         $this->semValue = array($this->semStack[$this->stackPos-(1-1)]);
    }

    protected function reduceRule83() {
         $this->semStack[$this->stackPos-(3-1)][] = $this->semStack[$this->stackPos-(3-3)]; $this->semValue = $this->semStack[$this->stackPos-(3-1)];
    }

    protected function reduceRule84() {
         $this->semValue = new Name($this->semStack[$this->stackPos-(1-1)], $this->startAttributeStack[$this->stackPos-(1-1)] + $this->endAttributes);
    }

    protected function reduceRule85() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule86() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule87() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule88() {
         $this->semValue = new Stmt\HaltCompiler($this->lexer->handleHaltCompiler(), $this->startAttributeStack[$this->stackPos-(1-1)] + $this->endAttributes);
    }

    protected function reduceRule89() {
         $this->semValue = new Stmt\Namespace_($this->semStack[$this->stackPos-(3-2)], null, $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule90() {
         $this->semValue = new Stmt\Namespace_($this->semStack[$this->stackPos-(5-2)], $this->semStack[$this->stackPos-(5-4)], $this->startAttributeStack[$this->stackPos-(5-1)] + $this->endAttributes);
    }

    protected function reduceRule91() {
         $this->semValue = new Stmt\Namespace_(null, $this->semStack[$this->stackPos-(4-3)], $this->startAttributeStack[$this->stackPos-(4-1)] + $this->endAttributes);
    }

    protected function reduceRule92() {
         $this->semValue = new Stmt\Use_($this->semStack[$this->stackPos-(3-2)], Stmt\Use_::TYPE_NORMAL, $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule93() {
         $this->semValue = new Stmt\Use_($this->semStack[$this->stackPos-(4-3)], $this->semStack[$this->stackPos-(4-2)], $this->startAttributeStack[$this->stackPos-(4-1)] + $this->endAttributes);
    }

    protected function reduceRule94() {
         $this->semValue = $this->semStack[$this->stackPos-(2-1)];
    }

    protected function reduceRule95() {
         $this->semValue = new Stmt\Const_($this->semStack[$this->stackPos-(3-2)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule96() {
         $this->semValue = Stmt\Use_::TYPE_FUNCTION;
    }

    protected function reduceRule97() {
         $this->semValue = Stmt\Use_::TYPE_CONSTANT;
    }

    protected function reduceRule98() {
         $this->semValue = new Stmt\GroupUse(new Name($this->semStack[$this->stackPos-(7-3)], $this->startAttributeStack[$this->stackPos-(7-1)] + $this->endAttributes), $this->semStack[$this->stackPos-(7-6)], $this->semStack[$this->stackPos-(7-2)], $this->startAttributeStack[$this->stackPos-(7-1)] + $this->endAttributes);
    }

    protected function reduceRule99() {
         $this->semValue = new Stmt\GroupUse(new Name($this->semStack[$this->stackPos-(8-4)], $this->startAttributeStack[$this->stackPos-(8-1)] + $this->endAttributes), $this->semStack[$this->stackPos-(8-7)], $this->semStack[$this->stackPos-(8-2)], $this->startAttributeStack[$this->stackPos-(8-1)] + $this->endAttributes);
    }

    protected function reduceRule100() {
         $this->semValue = new Stmt\GroupUse(new Name($this->semStack[$this->stackPos-(6-2)], $this->startAttributeStack[$this->stackPos-(6-1)] + $this->endAttributes), $this->semStack[$this->stackPos-(6-5)], Stmt\Use_::TYPE_UNKNOWN, $this->startAttributeStack[$this->stackPos-(6-1)] + $this->endAttributes);
    }

    protected function reduceRule101() {
         $this->semValue = new Stmt\GroupUse(new Name($this->semStack[$this->stackPos-(7-3)], $this->startAttributeStack[$this->stackPos-(7-1)] + $this->endAttributes), $this->semStack[$this->stackPos-(7-6)], Stmt\Use_::TYPE_UNKNOWN, $this->startAttributeStack[$this->stackPos-(7-1)] + $this->endAttributes);
    }

    protected function reduceRule102() {
         $this->semStack[$this->stackPos-(3-1)][] = $this->semStack[$this->stackPos-(3-3)]; $this->semValue = $this->semStack[$this->stackPos-(3-1)];
    }

    protected function reduceRule103() {
         $this->semValue = array($this->semStack[$this->stackPos-(1-1)]);
    }

    protected function reduceRule104() {
         $this->semStack[$this->stackPos-(3-1)][] = $this->semStack[$this->stackPos-(3-3)]; $this->semValue = $this->semStack[$this->stackPos-(3-1)];
    }

    protected function reduceRule105() {
         $this->semValue = array($this->semStack[$this->stackPos-(1-1)]);
    }

    protected function reduceRule106() {
         $this->semStack[$this->stackPos-(3-1)][] = $this->semStack[$this->stackPos-(3-3)]; $this->semValue = $this->semStack[$this->stackPos-(3-1)];
    }

    protected function reduceRule107() {
         $this->semValue = array($this->semStack[$this->stackPos-(1-1)]);
    }

    protected function reduceRule108() {
         $this->semValue = new Stmt\UseUse($this->semStack[$this->stackPos-(1-1)], null, Stmt\Use_::TYPE_UNKNOWN, $this->startAttributeStack[$this->stackPos-(1-1)] + $this->endAttributes);
    }

    protected function reduceRule109() {
         $this->semValue = new Stmt\UseUse($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], Stmt\Use_::TYPE_UNKNOWN, $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule110() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule111() {
         $this->semValue = $this->semStack[$this->stackPos-(2-2)];
    }

    protected function reduceRule112() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)]; $this->semValue->type = Stmt\Use_::TYPE_NORMAL;
    }

    protected function reduceRule113() {
         $this->semValue = $this->semStack[$this->stackPos-(2-2)]; $this->semValue->type = $this->semStack[$this->stackPos-(2-1)];
    }

    protected function reduceRule114() {
         $this->semStack[$this->stackPos-(3-1)][] = $this->semStack[$this->stackPos-(3-3)]; $this->semValue = $this->semStack[$this->stackPos-(3-1)];
    }

    protected function reduceRule115() {
         $this->semValue = array($this->semStack[$this->stackPos-(1-1)]);
    }

    protected function reduceRule116() {
         $this->semValue = new Node\Const_($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule117() {
         $this->semStack[$this->stackPos-(3-1)][] = $this->semStack[$this->stackPos-(3-3)]; $this->semValue = $this->semStack[$this->stackPos-(3-1)];
    }

    protected function reduceRule118() {
         $this->semValue = array($this->semStack[$this->stackPos-(1-1)]);
    }

    protected function reduceRule119() {
         $this->semValue = new Node\Const_($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule120() {
         if (is_array($this->semStack[$this->stackPos-(2-2)])) { $this->semValue = array_merge($this->semStack[$this->stackPos-(2-1)], $this->semStack[$this->stackPos-(2-2)]); } else { $this->semStack[$this->stackPos-(2-1)][] = $this->semStack[$this->stackPos-(2-2)]; $this->semValue = $this->semStack[$this->stackPos-(2-1)]; };
    }

    protected function reduceRule121() {
         $this->semValue = array();
    }

    protected function reduceRule122() {
         $startAttributes = $this->lookaheadStartAttributes; if (isset($startAttributes['comments'])) { $nop = new Stmt\Nop(['comments' => $startAttributes['comments']]); } else { $nop = null; };
            if ($nop !== null) { $this->semStack[$this->stackPos-(1-1)][] = $nop; } $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule123() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule124() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule125() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule126() {
         throw new Error('__HALT_COMPILER() can only be used from the outermost scope', $this->startAttributeStack[$this->stackPos-(1-1)] + $this->endAttributes);
    }

    protected function reduceRule127() {
         $this->semValue = $this->semStack[$this->stackPos-(3-2)]; $attrs = $this->startAttributeStack[$this->stackPos-(3-1)]; $stmts = $this->semValue; if (!empty($attrs['comments']) && isset($stmts[0])) {$stmts[0]->setAttribute('comments', array_merge($attrs['comments'], $stmts[0]->getAttribute('comments', []))); };
    }

    protected function reduceRule128() {
         $this->semValue = new Stmt\If_($this->semStack[$this->stackPos-(7-3)], ['stmts' => is_array($this->semStack[$this->stackPos-(7-5)]) ? $this->semStack[$this->stackPos-(7-5)] : array($this->semStack[$this->stackPos-(7-5)]), 'elseifs' => $this->semStack[$this->stackPos-(7-6)], 'else' => $this->semStack[$this->stackPos-(7-7)]], $this->startAttributeStack[$this->stackPos-(7-1)] + $this->endAttributes);
    }

    protected function reduceRule129() {
         $this->semValue = new Stmt\If_($this->semStack[$this->stackPos-(10-3)], ['stmts' => $this->semStack[$this->stackPos-(10-6)], 'elseifs' => $this->semStack[$this->stackPos-(10-7)], 'else' => $this->semStack[$this->stackPos-(10-8)]], $this->startAttributeStack[$this->stackPos-(10-1)] + $this->endAttributes);
    }

    protected function reduceRule130() {
         $this->semValue = new Stmt\While_($this->semStack[$this->stackPos-(5-3)], $this->semStack[$this->stackPos-(5-5)], $this->startAttributeStack[$this->stackPos-(5-1)] + $this->endAttributes);
    }

    protected function reduceRule131() {
         $this->semValue = new Stmt\Do_($this->semStack[$this->stackPos-(7-5)], is_array($this->semStack[$this->stackPos-(7-2)]) ? $this->semStack[$this->stackPos-(7-2)] : array($this->semStack[$this->stackPos-(7-2)]), $this->startAttributeStack[$this->stackPos-(7-1)] + $this->endAttributes);
    }

    protected function reduceRule132() {
         $this->semValue = new Stmt\For_(['init' => $this->semStack[$this->stackPos-(9-3)], 'cond' => $this->semStack[$this->stackPos-(9-5)], 'loop' => $this->semStack[$this->stackPos-(9-7)], 'stmts' => $this->semStack[$this->stackPos-(9-9)]], $this->startAttributeStack[$this->stackPos-(9-1)] + $this->endAttributes);
    }

    protected function reduceRule133() {
         $this->semValue = new Stmt\Switch_($this->semStack[$this->stackPos-(5-3)], $this->semStack[$this->stackPos-(5-5)], $this->startAttributeStack[$this->stackPos-(5-1)] + $this->endAttributes);
    }

    protected function reduceRule134() {
         $this->semValue = new Stmt\Break_($this->semStack[$this->stackPos-(3-2)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule135() {
         $this->semValue = new Stmt\Continue_($this->semStack[$this->stackPos-(3-2)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule136() {
         $this->semValue = new Stmt\Return_($this->semStack[$this->stackPos-(3-2)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule137() {
         $this->semValue = new Stmt\Global_($this->semStack[$this->stackPos-(3-2)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule138() {
         $this->semValue = new Stmt\Static_($this->semStack[$this->stackPos-(3-2)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule139() {
         $this->semValue = new Stmt\Echo_($this->semStack[$this->stackPos-(3-2)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule140() {
         $this->semValue = new Stmt\InlineHTML($this->semStack[$this->stackPos-(1-1)], $this->startAttributeStack[$this->stackPos-(1-1)] + $this->endAttributes);
    }

    protected function reduceRule141() {
         $this->semValue = $this->semStack[$this->stackPos-(2-1)];
    }

    protected function reduceRule142() {
         $this->semValue = new Stmt\Unset_($this->semStack[$this->stackPos-(5-3)], $this->startAttributeStack[$this->stackPos-(5-1)] + $this->endAttributes);
    }

    protected function reduceRule143() {
         $this->semValue = new Stmt\Foreach_($this->semStack[$this->stackPos-(7-3)], $this->semStack[$this->stackPos-(7-5)][0], ['keyVar' => null, 'byRef' => $this->semStack[$this->stackPos-(7-5)][1], 'stmts' => $this->semStack[$this->stackPos-(7-7)]], $this->startAttributeStack[$this->stackPos-(7-1)] + $this->endAttributes);
    }

    protected function reduceRule144() {
         $this->semValue = new Stmt\Foreach_($this->semStack[$this->stackPos-(9-3)], $this->semStack[$this->stackPos-(9-7)][0], ['keyVar' => $this->semStack[$this->stackPos-(9-5)], 'byRef' => $this->semStack[$this->stackPos-(9-7)][1], 'stmts' => $this->semStack[$this->stackPos-(9-9)]], $this->startAttributeStack[$this->stackPos-(9-1)] + $this->endAttributes);
    }

    protected function reduceRule145() {
         $this->semValue = new Stmt\Declare_($this->semStack[$this->stackPos-(5-3)], $this->semStack[$this->stackPos-(5-5)], $this->startAttributeStack[$this->stackPos-(5-1)] + $this->endAttributes);
    }

    protected function reduceRule146() {
         $this->semValue = new Stmt\TryCatch($this->semStack[$this->stackPos-(6-3)], $this->semStack[$this->stackPos-(6-5)], $this->semStack[$this->stackPos-(6-6)], $this->startAttributeStack[$this->stackPos-(6-1)] + $this->endAttributes);
    }

    protected function reduceRule147() {
         $this->semValue = new Stmt\Throw_($this->semStack[$this->stackPos-(3-2)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule148() {
         $this->semValue = new Stmt\Goto_($this->semStack[$this->stackPos-(3-2)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule149() {
         $this->semValue = new Stmt\Label($this->semStack[$this->stackPos-(2-1)], $this->startAttributeStack[$this->stackPos-(2-1)] + $this->endAttributes);
    }

    protected function reduceRule150() {
         $this->semValue = $this->semStack[$this->stackPos-(2-1)];
    }

    protected function reduceRule151() {
         $this->semValue = array(); /* means: no statement */
    }

    protected function reduceRule152() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule153() {
         $startAttributes = $this->startAttributeStack[$this->stackPos-(1-1)]; if (isset($startAttributes['comments'])) { $this->semValue = new Stmt\Nop(['comments' => $startAttributes['comments']]); } else { $this->semValue = null; };
            if ($this->semValue === null) $this->semValue = array(); /* means: no statement */
    }

    protected function reduceRule154() {
         $this->semValue = array();
    }

    protected function reduceRule155() {
         $this->semStack[$this->stackPos-(2-1)][] = $this->semStack[$this->stackPos-(2-2)]; $this->semValue = $this->semStack[$this->stackPos-(2-1)];
    }

    protected function reduceRule156() {
         $this->semValue = new Stmt\Catch_($this->semStack[$this->stackPos-(8-3)], substr($this->semStack[$this->stackPos-(8-4)], 1), $this->semStack[$this->stackPos-(8-7)], $this->startAttributeStack[$this->stackPos-(8-1)] + $this->endAttributes);
    }

    protected function reduceRule157() {
         $this->semValue = null;
    }

    protected function reduceRule158() {
         $this->semValue = $this->semStack[$this->stackPos-(4-3)];
    }

    protected function reduceRule159() {
         $this->semValue = array($this->semStack[$this->stackPos-(1-1)]);
    }

    protected function reduceRule160() {
         $this->semStack[$this->stackPos-(3-1)][] = $this->semStack[$this->stackPos-(3-3)]; $this->semValue = $this->semStack[$this->stackPos-(3-1)];
    }

    protected function reduceRule161() {
         $this->semValue = false;
    }

    protected function reduceRule162() {
         $this->semValue = true;
    }

    protected function reduceRule163() {
         $this->semValue = false;
    }

    protected function reduceRule164() {
         $this->semValue = true;
    }

    protected function reduceRule165() {
         $this->semValue = new Stmt\Function_($this->semStack[$this->stackPos-(10-3)], ['byRef' => $this->semStack[$this->stackPos-(10-2)], 'params' => $this->semStack[$this->stackPos-(10-5)], 'returnType' => $this->semStack[$this->stackPos-(10-7)], 'stmts' => $this->semStack[$this->stackPos-(10-9)]], $this->startAttributeStack[$this->stackPos-(10-1)] + $this->endAttributes);
    }

    protected function reduceRule166() {
         $this->semValue = new Stmt\Class_($this->semStack[$this->stackPos-(7-2)], ['type' => $this->semStack[$this->stackPos-(7-1)], 'extends' => $this->semStack[$this->stackPos-(7-3)], 'implements' => $this->semStack[$this->stackPos-(7-4)], 'stmts' => $this->semStack[$this->stackPos-(7-6)]], $this->startAttributeStack[$this->stackPos-(7-1)] + $this->endAttributes);
    }

    protected function reduceRule167() {
         $this->semValue = new Stmt\Interface_($this->semStack[$this->stackPos-(6-2)], ['extends' => $this->semStack[$this->stackPos-(6-3)], 'stmts' => $this->semStack[$this->stackPos-(6-5)]], $this->startAttributeStack[$this->stackPos-(6-1)] + $this->endAttributes);
    }

    protected function reduceRule168() {
         $this->semValue = new Stmt\Trait_($this->semStack[$this->stackPos-(5-2)], $this->semStack[$this->stackPos-(5-4)], $this->startAttributeStack[$this->stackPos-(5-1)] + $this->endAttributes);
    }

    protected function reduceRule169() {
         $this->semValue = 0;
    }

    protected function reduceRule170() {
         $this->semValue = Stmt\Class_::MODIFIER_ABSTRACT;
    }

    protected function reduceRule171() {
         $this->semValue = Stmt\Class_::MODIFIER_FINAL;
    }

    protected function reduceRule172() {
         $this->semValue = null;
    }

    protected function reduceRule173() {
         $this->semValue = $this->semStack[$this->stackPos-(2-2)];
    }

    protected function reduceRule174() {
         $this->semValue = array();
    }

    protected function reduceRule175() {
         $this->semValue = $this->semStack[$this->stackPos-(2-2)];
    }

    protected function reduceRule176() {
         $this->semValue = array();
    }

    protected function reduceRule177() {
         $this->semValue = $this->semStack[$this->stackPos-(2-2)];
    }

    protected function reduceRule178() {
         $this->semValue = array($this->semStack[$this->stackPos-(1-1)]);
    }

    protected function reduceRule179() {
         $this->semStack[$this->stackPos-(3-1)][] = $this->semStack[$this->stackPos-(3-3)]; $this->semValue = $this->semStack[$this->stackPos-(3-1)];
    }

    protected function reduceRule180() {
         $this->semValue = is_array($this->semStack[$this->stackPos-(1-1)]) ? $this->semStack[$this->stackPos-(1-1)] : array($this->semStack[$this->stackPos-(1-1)]);
    }

    protected function reduceRule181() {
         $this->semValue = $this->semStack[$this->stackPos-(4-2)];
    }

    protected function reduceRule182() {
         $this->semValue = is_array($this->semStack[$this->stackPos-(1-1)]) ? $this->semStack[$this->stackPos-(1-1)] : array($this->semStack[$this->stackPos-(1-1)]);
    }

    protected function reduceRule183() {
         $this->semValue = $this->semStack[$this->stackPos-(4-2)];
    }

    protected function reduceRule184() {
         $this->semValue = is_array($this->semStack[$this->stackPos-(1-1)]) ? $this->semStack[$this->stackPos-(1-1)] : array($this->semStack[$this->stackPos-(1-1)]);
    }

    protected function reduceRule185() {
         $this->semValue = null;
    }

    protected function reduceRule186() {
         $this->semValue = $this->semStack[$this->stackPos-(4-2)];
    }

    protected function reduceRule187() {
         $this->semValue = array($this->semStack[$this->stackPos-(1-1)]);
    }

    protected function reduceRule188() {
         $this->semStack[$this->stackPos-(3-1)][] = $this->semStack[$this->stackPos-(3-3)]; $this->semValue = $this->semStack[$this->stackPos-(3-1)];
    }

    protected function reduceRule189() {
         $this->semValue = new Stmt\DeclareDeclare($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule190() {
         $this->semValue = $this->semStack[$this->stackPos-(3-2)];
    }

    protected function reduceRule191() {
         $this->semValue = $this->semStack[$this->stackPos-(4-3)];
    }

    protected function reduceRule192() {
         $this->semValue = $this->semStack[$this->stackPos-(4-2)];
    }

    protected function reduceRule193() {
         $this->semValue = $this->semStack[$this->stackPos-(5-3)];
    }

    protected function reduceRule194() {
         $this->semValue = array();
    }

    protected function reduceRule195() {
         $this->semStack[$this->stackPos-(2-1)][] = $this->semStack[$this->stackPos-(2-2)]; $this->semValue = $this->semStack[$this->stackPos-(2-1)];
    }

    protected function reduceRule196() {
         $this->semValue = new Stmt\Case_($this->semStack[$this->stackPos-(4-2)], $this->semStack[$this->stackPos-(4-4)], $this->startAttributeStack[$this->stackPos-(4-1)] + $this->endAttributes);
    }

    protected function reduceRule197() {
         $this->semValue = new Stmt\Case_(null, $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule198() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule199() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule200() {
         $this->semValue = is_array($this->semStack[$this->stackPos-(1-1)]) ? $this->semStack[$this->stackPos-(1-1)] : array($this->semStack[$this->stackPos-(1-1)]);
    }

    protected function reduceRule201() {
         $this->semValue = $this->semStack[$this->stackPos-(4-2)];
    }

    protected function reduceRule202() {
         $this->semValue = array();
    }

    protected function reduceRule203() {
         $this->semStack[$this->stackPos-(2-1)][] = $this->semStack[$this->stackPos-(2-2)]; $this->semValue = $this->semStack[$this->stackPos-(2-1)];
    }

    protected function reduceRule204() {
         $this->semValue = new Stmt\ElseIf_($this->semStack[$this->stackPos-(5-3)], is_array($this->semStack[$this->stackPos-(5-5)]) ? $this->semStack[$this->stackPos-(5-5)] : array($this->semStack[$this->stackPos-(5-5)]), $this->startAttributeStack[$this->stackPos-(5-1)] + $this->endAttributes);
    }

    protected function reduceRule205() {
         $this->semValue = array();
    }

    protected function reduceRule206() {
         $this->semStack[$this->stackPos-(2-1)][] = $this->semStack[$this->stackPos-(2-2)]; $this->semValue = $this->semStack[$this->stackPos-(2-1)];
    }

    protected function reduceRule207() {
         $this->semValue = new Stmt\ElseIf_($this->semStack[$this->stackPos-(6-3)], $this->semStack[$this->stackPos-(6-6)], $this->startAttributeStack[$this->stackPos-(6-1)] + $this->endAttributes);
    }

    protected function reduceRule208() {
         $this->semValue = null;
    }

    protected function reduceRule209() {
         $this->semValue = new Stmt\Else_(is_array($this->semStack[$this->stackPos-(2-2)]) ? $this->semStack[$this->stackPos-(2-2)] : array($this->semStack[$this->stackPos-(2-2)]), $this->startAttributeStack[$this->stackPos-(2-1)] + $this->endAttributes);
    }

    protected function reduceRule210() {
         $this->semValue = null;
    }

    protected function reduceRule211() {
         $this->semValue = new Stmt\Else_($this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule212() {
         $this->semValue = array($this->semStack[$this->stackPos-(1-1)], false);
    }

    protected function reduceRule213() {
         $this->semValue = array($this->semStack[$this->stackPos-(2-2)], true);
    }

    protected function reduceRule214() {
         $this->semValue = array($this->semStack[$this->stackPos-(1-1)], false);
    }

    protected function reduceRule215() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule216() {
         $this->semValue = array();
    }

    protected function reduceRule217() {
         $this->semValue = array($this->semStack[$this->stackPos-(1-1)]);
    }

    protected function reduceRule218() {
         $this->semStack[$this->stackPos-(3-1)][] = $this->semStack[$this->stackPos-(3-3)]; $this->semValue = $this->semStack[$this->stackPos-(3-1)];
    }

    protected function reduceRule219() {
         $this->semValue = new Node\Param(substr($this->semStack[$this->stackPos-(4-4)], 1), null, $this->semStack[$this->stackPos-(4-1)], $this->semStack[$this->stackPos-(4-2)], $this->semStack[$this->stackPos-(4-3)], $this->startAttributeStack[$this->stackPos-(4-1)] + $this->endAttributes);
    }

    protected function reduceRule220() {
         $this->semValue = new Node\Param(substr($this->semStack[$this->stackPos-(6-4)], 1), $this->semStack[$this->stackPos-(6-6)], $this->semStack[$this->stackPos-(6-1)], $this->semStack[$this->stackPos-(6-2)], $this->semStack[$this->stackPos-(6-3)], $this->startAttributeStack[$this->stackPos-(6-1)] + $this->endAttributes);
    }

    protected function reduceRule221() {
         $this->semValue = $this->handleScalarTypes($this->semStack[$this->stackPos-(1-1)]);
    }

    protected function reduceRule222() {
         $this->semValue = 'array';
    }

    protected function reduceRule223() {
         $this->semValue = 'callable';
    }

    protected function reduceRule224() {
         $this->semValue = null;
    }

    protected function reduceRule225() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule226() {
         $this->semValue = null;
    }

    protected function reduceRule227() {
         $this->semValue = $this->semStack[$this->stackPos-(2-2)];
    }

    protected function reduceRule228() {
         $this->semValue = array();
    }

    protected function reduceRule229() {
         $this->semValue = $this->semStack[$this->stackPos-(3-2)];
    }

    protected function reduceRule230() {
         $this->semValue = array($this->semStack[$this->stackPos-(1-1)]);
    }

    protected function reduceRule231() {
         $this->semStack[$this->stackPos-(3-1)][] = $this->semStack[$this->stackPos-(3-3)]; $this->semValue = $this->semStack[$this->stackPos-(3-1)];
    }

    protected function reduceRule232() {
         $this->semValue = new Node\Arg($this->semStack[$this->stackPos-(1-1)], false, false, $this->startAttributeStack[$this->stackPos-(1-1)] + $this->endAttributes);
    }

    protected function reduceRule233() {
         $this->semValue = new Node\Arg($this->semStack[$this->stackPos-(2-2)], true, false, $this->startAttributeStack[$this->stackPos-(2-1)] + $this->endAttributes);
    }

    protected function reduceRule234() {
         $this->semValue = new Node\Arg($this->semStack[$this->stackPos-(2-2)], false, true, $this->startAttributeStack[$this->stackPos-(2-1)] + $this->endAttributes);
    }

    protected function reduceRule235() {
         $this->semStack[$this->stackPos-(3-1)][] = $this->semStack[$this->stackPos-(3-3)]; $this->semValue = $this->semStack[$this->stackPos-(3-1)];
    }

    protected function reduceRule236() {
         $this->semValue = array($this->semStack[$this->stackPos-(1-1)]);
    }

    protected function reduceRule237() {
         $this->semValue = new Expr\Variable($this->semStack[$this->stackPos-(1-1)], $this->startAttributeStack[$this->stackPos-(1-1)] + $this->endAttributes);
    }

    protected function reduceRule238() {
         $this->semStack[$this->stackPos-(3-1)][] = $this->semStack[$this->stackPos-(3-3)]; $this->semValue = $this->semStack[$this->stackPos-(3-1)];
    }

    protected function reduceRule239() {
         $this->semValue = array($this->semStack[$this->stackPos-(1-1)]);
    }

    protected function reduceRule240() {
         $this->semValue = new Stmt\StaticVar(substr($this->semStack[$this->stackPos-(1-1)], 1), null, $this->startAttributeStack[$this->stackPos-(1-1)] + $this->endAttributes);
    }

    protected function reduceRule241() {
         $this->semValue = new Stmt\StaticVar(substr($this->semStack[$this->stackPos-(3-1)], 1), $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule242() {
         $this->semStack[$this->stackPos-(2-1)][] = $this->semStack[$this->stackPos-(2-2)]; $this->semValue = $this->semStack[$this->stackPos-(2-1)];
    }

    protected function reduceRule243() {
         $this->semValue = array();
    }

    protected function reduceRule244() {
         $this->semValue = new Stmt\Property($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-2)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule245() {
         $this->semValue = new Stmt\ClassConst($this->semStack[$this->stackPos-(3-2)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule246() {
         $this->semValue = new Stmt\TraitUse($this->semStack[$this->stackPos-(3-2)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule247() {
         $this->semValue = array();
    }

    protected function reduceRule248() {
         $this->semValue = $this->semStack[$this->stackPos-(3-2)];
    }

    protected function reduceRule249() {
         $this->semValue = array();
    }

    protected function reduceRule250() {
         $this->semStack[$this->stackPos-(2-1)][] = $this->semStack[$this->stackPos-(2-2)]; $this->semValue = $this->semStack[$this->stackPos-(2-1)];
    }

    protected function reduceRule251() {
         $this->semValue = new Stmt\TraitUseAdaptation\Precedence($this->semStack[$this->stackPos-(4-1)][0], $this->semStack[$this->stackPos-(4-1)][1], $this->semStack[$this->stackPos-(4-3)], $this->startAttributeStack[$this->stackPos-(4-1)] + $this->endAttributes);
    }

    protected function reduceRule252() {
         $this->semValue = new Stmt\TraitUseAdaptation\Alias($this->semStack[$this->stackPos-(5-1)][0], $this->semStack[$this->stackPos-(5-1)][1], $this->semStack[$this->stackPos-(5-3)], $this->semStack[$this->stackPos-(5-4)], $this->startAttributeStack[$this->stackPos-(5-1)] + $this->endAttributes);
    }

    protected function reduceRule253() {
         $this->semValue = new Stmt\TraitUseAdaptation\Alias($this->semStack[$this->stackPos-(4-1)][0], $this->semStack[$this->stackPos-(4-1)][1], $this->semStack[$this->stackPos-(4-3)], null, $this->startAttributeStack[$this->stackPos-(4-1)] + $this->endAttributes);
    }

    protected function reduceRule254() {
         $this->semValue = new Stmt\TraitUseAdaptation\Alias($this->semStack[$this->stackPos-(4-1)][0], $this->semStack[$this->stackPos-(4-1)][1], null, $this->semStack[$this->stackPos-(4-3)], $this->startAttributeStack[$this->stackPos-(4-1)] + $this->endAttributes);
    }

    protected function reduceRule255() {
         $this->semValue = new Stmt\TraitUseAdaptation\Alias($this->semStack[$this->stackPos-(4-1)][0], $this->semStack[$this->stackPos-(4-1)][1], null, $this->semStack[$this->stackPos-(4-3)], $this->startAttributeStack[$this->stackPos-(4-1)] + $this->endAttributes);
    }

    protected function reduceRule256() {
         $this->semValue = array($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)]);
    }

    protected function reduceRule257() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule258() {
         $this->semValue = array(null, $this->semStack[$this->stackPos-(1-1)]);
    }

    protected function reduceRule259() {
         $this->semValue = null;
    }

    protected function reduceRule260() {
         $this->semValue = $this->semStack[$this->stackPos-(3-2)];
    }

    protected function reduceRule261() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule262() {
         $this->semValue = 0;
    }

    protected function reduceRule263() {
         $this->semValue = 0;
    }

    protected function reduceRule264() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule265() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule266() {
         Stmt\Class_::verifyModifier($this->semStack[$this->stackPos-(2-1)], $this->semStack[$this->stackPos-(2-2)]); $this->semValue = $this->semStack[$this->stackPos-(2-1)] | $this->semStack[$this->stackPos-(2-2)];
    }

    protected function reduceRule267() {
         $this->semValue = Stmt\Class_::MODIFIER_PUBLIC;
    }

    protected function reduceRule268() {
         $this->semValue = Stmt\Class_::MODIFIER_PROTECTED;
    }

    protected function reduceRule269() {
         $this->semValue = Stmt\Class_::MODIFIER_PRIVATE;
    }

    protected function reduceRule270() {
         $this->semValue = Stmt\Class_::MODIFIER_STATIC;
    }

    protected function reduceRule271() {
         $this->semValue = Stmt\Class_::MODIFIER_ABSTRACT;
    }

    protected function reduceRule272() {
         $this->semValue = Stmt\Class_::MODIFIER_FINAL;
    }

    protected function reduceRule273() {
         $this->semValue = array($this->semStack[$this->stackPos-(1-1)]);
    }

    protected function reduceRule274() {
         $this->semStack[$this->stackPos-(3-1)][] = $this->semStack[$this->stackPos-(3-3)]; $this->semValue = $this->semStack[$this->stackPos-(3-1)];
    }

    protected function reduceRule275() {
         $this->semValue = new Stmt\PropertyProperty(substr($this->semStack[$this->stackPos-(1-1)], 1), null, $this->startAttributeStack[$this->stackPos-(1-1)] + $this->endAttributes);
    }

    protected function reduceRule276() {
         $this->semValue = new Stmt\PropertyProperty(substr($this->semStack[$this->stackPos-(3-1)], 1), $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule277() {
         $this->semStack[$this->stackPos-(3-1)][] = $this->semStack[$this->stackPos-(3-3)]; $this->semValue = $this->semStack[$this->stackPos-(3-1)];
    }

    protected function reduceRule278() {
         $this->semValue = array($this->semStack[$this->stackPos-(1-1)]);
    }

    protected function reduceRule279() {
         $this->semValue = array();
    }

    protected function reduceRule280() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule281() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule282() {
         $this->semValue = new Expr\Assign($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule283() {
         $this->semValue = new Expr\Assign($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule284() {
         $this->semValue = new Expr\AssignRef($this->semStack[$this->stackPos-(4-1)], $this->semStack[$this->stackPos-(4-4)], $this->startAttributeStack[$this->stackPos-(4-1)] + $this->endAttributes);
    }

    protected function reduceRule285() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule286() {
         $this->semValue = new Expr\Clone_($this->semStack[$this->stackPos-(2-2)], $this->startAttributeStack[$this->stackPos-(2-1)] + $this->endAttributes);
    }

    protected function reduceRule287() {
         $this->semValue = new Expr\AssignOp\Plus($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule288() {
         $this->semValue = new Expr\AssignOp\Minus($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule289() {
         $this->semValue = new Expr\AssignOp\Mul($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule290() {
         $this->semValue = new Expr\AssignOp\Div($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule291() {
         $this->semValue = new Expr\AssignOp\Concat($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule292() {
         $this->semValue = new Expr\AssignOp\Mod($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule293() {
         $this->semValue = new Expr\AssignOp\BitwiseAnd($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule294() {
         $this->semValue = new Expr\AssignOp\BitwiseOr($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule295() {
         $this->semValue = new Expr\AssignOp\BitwiseXor($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule296() {
         $this->semValue = new Expr\AssignOp\ShiftLeft($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule297() {
         $this->semValue = new Expr\AssignOp\ShiftRight($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule298() {
         $this->semValue = new Expr\AssignOp\Pow($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule299() {
         $this->semValue = new Expr\PostInc($this->semStack[$this->stackPos-(2-1)], $this->startAttributeStack[$this->stackPos-(2-1)] + $this->endAttributes);
    }

    protected function reduceRule300() {
         $this->semValue = new Expr\PreInc($this->semStack[$this->stackPos-(2-2)], $this->startAttributeStack[$this->stackPos-(2-1)] + $this->endAttributes);
    }

    protected function reduceRule301() {
         $this->semValue = new Expr\PostDec($this->semStack[$this->stackPos-(2-1)], $this->startAttributeStack[$this->stackPos-(2-1)] + $this->endAttributes);
    }

    protected function reduceRule302() {
         $this->semValue = new Expr\PreDec($this->semStack[$this->stackPos-(2-2)], $this->startAttributeStack[$this->stackPos-(2-1)] + $this->endAttributes);
    }

    protected function reduceRule303() {
         $this->semValue = new Expr\BinaryOp\BooleanOr($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule304() {
         $this->semValue = new Expr\BinaryOp\BooleanAnd($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule305() {
         $this->semValue = new Expr\BinaryOp\LogicalOr($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule306() {
         $this->semValue = new Expr\BinaryOp\LogicalAnd($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule307() {
         $this->semValue = new Expr\BinaryOp\LogicalXor($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule308() {
         $this->semValue = new Expr\BinaryOp\BitwiseOr($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule309() {
         $this->semValue = new Expr\BinaryOp\BitwiseAnd($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule310() {
         $this->semValue = new Expr\BinaryOp\BitwiseXor($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule311() {
         $this->semValue = new Expr\BinaryOp\Concat($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule312() {
         $this->semValue = new Expr\BinaryOp\Plus($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule313() {
         $this->semValue = new Expr\BinaryOp\Minus($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule314() {
         $this->semValue = new Expr\BinaryOp\Mul($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule315() {
         $this->semValue = new Expr\BinaryOp\Div($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule316() {
         $this->semValue = new Expr\BinaryOp\Mod($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule317() {
         $this->semValue = new Expr\BinaryOp\ShiftLeft($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule318() {
         $this->semValue = new Expr\BinaryOp\ShiftRight($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule319() {
         $this->semValue = new Expr\BinaryOp\Pow($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule320() {
         $this->semValue = new Expr\UnaryPlus($this->semStack[$this->stackPos-(2-2)], $this->startAttributeStack[$this->stackPos-(2-1)] + $this->endAttributes);
    }

    protected function reduceRule321() {
         $this->semValue = new Expr\UnaryMinus($this->semStack[$this->stackPos-(2-2)], $this->startAttributeStack[$this->stackPos-(2-1)] + $this->endAttributes);
    }

    protected function reduceRule322() {
         $this->semValue = new Expr\BooleanNot($this->semStack[$this->stackPos-(2-2)], $this->startAttributeStack[$this->stackPos-(2-1)] + $this->endAttributes);
    }

    protected function reduceRule323() {
         $this->semValue = new Expr\BitwiseNot($this->semStack[$this->stackPos-(2-2)], $this->startAttributeStack[$this->stackPos-(2-1)] + $this->endAttributes);
    }

    protected function reduceRule324() {
         $this->semValue = new Expr\BinaryOp\Identical($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule325() {
         $this->semValue = new Expr\BinaryOp\NotIdentical($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule326() {
         $this->semValue = new Expr\BinaryOp\Equal($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule327() {
         $this->semValue = new Expr\BinaryOp\NotEqual($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule328() {
         $this->semValue = new Expr\BinaryOp\Spaceship($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule329() {
         $this->semValue = new Expr\BinaryOp\Smaller($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule330() {
         $this->semValue = new Expr\BinaryOp\SmallerOrEqual($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule331() {
         $this->semValue = new Expr\BinaryOp\Greater($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule332() {
         $this->semValue = new Expr\BinaryOp\GreaterOrEqual($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule333() {
         $this->semValue = new Expr\Instanceof_($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule334() {
         $this->semValue = $this->semStack[$this->stackPos-(3-2)];
    }

    protected function reduceRule335() {
         $this->semValue = new Expr\Ternary($this->semStack[$this->stackPos-(5-1)], $this->semStack[$this->stackPos-(5-3)], $this->semStack[$this->stackPos-(5-5)], $this->startAttributeStack[$this->stackPos-(5-1)] + $this->endAttributes);
    }

    protected function reduceRule336() {
         $this->semValue = new Expr\Ternary($this->semStack[$this->stackPos-(4-1)], null, $this->semStack[$this->stackPos-(4-4)], $this->startAttributeStack[$this->stackPos-(4-1)] + $this->endAttributes);
    }

    protected function reduceRule337() {
         $this->semValue = new Expr\BinaryOp\Coalesce($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule338() {
         $this->semValue = new Expr\Isset_($this->semStack[$this->stackPos-(4-3)], $this->startAttributeStack[$this->stackPos-(4-1)] + $this->endAttributes);
    }

    protected function reduceRule339() {
         $this->semValue = new Expr\Empty_($this->semStack[$this->stackPos-(4-3)], $this->startAttributeStack[$this->stackPos-(4-1)] + $this->endAttributes);
    }

    protected function reduceRule340() {
         $this->semValue = new Expr\Include_($this->semStack[$this->stackPos-(2-2)], Expr\Include_::TYPE_INCLUDE, $this->startAttributeStack[$this->stackPos-(2-1)] + $this->endAttributes);
    }

    protected function reduceRule341() {
         $this->semValue = new Expr\Include_($this->semStack[$this->stackPos-(2-2)], Expr\Include_::TYPE_INCLUDE_ONCE, $this->startAttributeStack[$this->stackPos-(2-1)] + $this->endAttributes);
    }

    protected function reduceRule342() {
         $this->semValue = new Expr\Eval_($this->semStack[$this->stackPos-(4-3)], $this->startAttributeStack[$this->stackPos-(4-1)] + $this->endAttributes);
    }

    protected function reduceRule343() {
         $this->semValue = new Expr\Include_($this->semStack[$this->stackPos-(2-2)], Expr\Include_::TYPE_REQUIRE, $this->startAttributeStack[$this->stackPos-(2-1)] + $this->endAttributes);
    }

    protected function reduceRule344() {
         $this->semValue = new Expr\Include_($this->semStack[$this->stackPos-(2-2)], Expr\Include_::TYPE_REQUIRE_ONCE, $this->startAttributeStack[$this->stackPos-(2-1)] + $this->endAttributes);
    }

    protected function reduceRule345() {
         $this->semValue = new Expr\Cast\Int_($this->semStack[$this->stackPos-(2-2)], $this->startAttributeStack[$this->stackPos-(2-1)] + $this->endAttributes);
    }

    protected function reduceRule346() {
         $this->semValue = new Expr\Cast\Double($this->semStack[$this->stackPos-(2-2)], $this->startAttributeStack[$this->stackPos-(2-1)] + $this->endAttributes);
    }

    protected function reduceRule347() {
         $this->semValue = new Expr\Cast\String_($this->semStack[$this->stackPos-(2-2)], $this->startAttributeStack[$this->stackPos-(2-1)] + $this->endAttributes);
    }

    protected function reduceRule348() {
         $this->semValue = new Expr\Cast\Array_($this->semStack[$this->stackPos-(2-2)], $this->startAttributeStack[$this->stackPos-(2-1)] + $this->endAttributes);
    }

    protected function reduceRule349() {
         $this->semValue = new Expr\Cast\Object_($this->semStack[$this->stackPos-(2-2)], $this->startAttributeStack[$this->stackPos-(2-1)] + $this->endAttributes);
    }

    protected function reduceRule350() {
         $this->semValue = new Expr\Cast\Bool_($this->semStack[$this->stackPos-(2-2)], $this->startAttributeStack[$this->stackPos-(2-1)] + $this->endAttributes);
    }

    protected function reduceRule351() {
         $this->semValue = new Expr\Cast\Unset_($this->semStack[$this->stackPos-(2-2)], $this->startAttributeStack[$this->stackPos-(2-1)] + $this->endAttributes);
    }

    protected function reduceRule352() {
         $attrs = $this->startAttributeStack[$this->stackPos-(2-1)] + $this->endAttributes;
            $attrs['kind'] = strtolower($this->semStack[$this->stackPos-(2-1)]) === 'exit' ? Expr\Exit_::KIND_EXIT : Expr\Exit_::KIND_DIE;
            $this->semValue = new Expr\Exit_($this->semStack[$this->stackPos-(2-2)], $attrs);
    }

    protected function reduceRule353() {
         $this->semValue = new Expr\ErrorSuppress($this->semStack[$this->stackPos-(2-2)], $this->startAttributeStack[$this->stackPos-(2-1)] + $this->endAttributes);
    }

    protected function reduceRule354() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule355() {
         $this->semValue = new Expr\ShellExec($this->semStack[$this->stackPos-(3-2)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule356() {
         $this->semValue = new Expr\Print_($this->semStack[$this->stackPos-(2-2)], $this->startAttributeStack[$this->stackPos-(2-1)] + $this->endAttributes);
    }

    protected function reduceRule357() {
         $this->semValue = new Expr\Yield_(null, null, $this->startAttributeStack[$this->stackPos-(1-1)] + $this->endAttributes);
    }

    protected function reduceRule358() {
         $this->semValue = new Expr\Yield_($this->semStack[$this->stackPos-(2-2)], null, $this->startAttributeStack[$this->stackPos-(2-1)] + $this->endAttributes);
    }

    protected function reduceRule359() {
         $this->semValue = new Expr\Yield_($this->semStack[$this->stackPos-(4-4)], $this->semStack[$this->stackPos-(4-2)], $this->startAttributeStack[$this->stackPos-(4-1)] + $this->endAttributes);
    }

    protected function reduceRule360() {
         $this->semValue = new Expr\YieldFrom($this->semStack[$this->stackPos-(2-2)], $this->startAttributeStack[$this->stackPos-(2-1)] + $this->endAttributes);
    }

    protected function reduceRule361() {
         $this->semValue = new Expr\Closure(['static' => false, 'byRef' => $this->semStack[$this->stackPos-(10-2)], 'params' => $this->semStack[$this->stackPos-(10-4)], 'uses' => $this->semStack[$this->stackPos-(10-6)], 'returnType' => $this->semStack[$this->stackPos-(10-7)], 'stmts' => $this->semStack[$this->stackPos-(10-9)]], $this->startAttributeStack[$this->stackPos-(10-1)] + $this->endAttributes);
    }

    protected function reduceRule362() {
         $this->semValue = new Expr\Closure(['static' => true, 'byRef' => $this->semStack[$this->stackPos-(11-3)], 'params' => $this->semStack[$this->stackPos-(11-5)], 'uses' => $this->semStack[$this->stackPos-(11-7)], 'returnType' => $this->semStack[$this->stackPos-(11-8)], 'stmts' => $this->semStack[$this->stackPos-(11-10)]], $this->startAttributeStack[$this->stackPos-(11-1)] + $this->endAttributes);
    }

    protected function reduceRule363() {
         $this->semValue = array(new Stmt\Class_(null, ['type' => 0, 'extends' => $this->semStack[$this->stackPos-(7-3)], 'implements' => $this->semStack[$this->stackPos-(7-4)], 'stmts' => $this->semStack[$this->stackPos-(7-6)]], $this->startAttributeStack[$this->stackPos-(7-1)] + $this->endAttributes), $this->semStack[$this->stackPos-(7-2)]);
    }

    protected function reduceRule364() {
         $this->semValue = new Expr\New_($this->semStack[$this->stackPos-(3-2)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule365() {
         list($class, $ctorArgs) = $this->semStack[$this->stackPos-(2-2)]; $this->semValue = new Expr\New_($class, $ctorArgs, $this->startAttributeStack[$this->stackPos-(2-1)] + $this->endAttributes);
    }

    protected function reduceRule366() {
         $this->semValue = array();
    }

    protected function reduceRule367() {
         $this->semValue = $this->semStack[$this->stackPos-(4-3)];
    }

    protected function reduceRule368() {
         $this->semValue = array($this->semStack[$this->stackPos-(1-1)]);
    }

    protected function reduceRule369() {
         $this->semStack[$this->stackPos-(3-1)][] = $this->semStack[$this->stackPos-(3-3)]; $this->semValue = $this->semStack[$this->stackPos-(3-1)];
    }

    protected function reduceRule370() {
         $this->semValue = new Expr\ClosureUse(substr($this->semStack[$this->stackPos-(2-2)], 1), $this->semStack[$this->stackPos-(2-1)], $this->startAttributeStack[$this->stackPos-(2-1)] + $this->endAttributes);
    }

    protected function reduceRule371() {
         $this->semValue = new Expr\FuncCall($this->semStack[$this->stackPos-(2-1)], $this->semStack[$this->stackPos-(2-2)], $this->startAttributeStack[$this->stackPos-(2-1)] + $this->endAttributes);
    }

    protected function reduceRule372() {
         $this->semValue = new Expr\FuncCall($this->semStack[$this->stackPos-(2-1)], $this->semStack[$this->stackPos-(2-2)], $this->startAttributeStack[$this->stackPos-(2-1)] + $this->endAttributes);
    }

    protected function reduceRule373() {
         $this->semValue = new Expr\StaticCall($this->semStack[$this->stackPos-(4-1)], $this->semStack[$this->stackPos-(4-3)], $this->semStack[$this->stackPos-(4-4)], $this->startAttributeStack[$this->stackPos-(4-1)] + $this->endAttributes);
    }

    protected function reduceRule374() {
         $this->semValue = new Name($this->semStack[$this->stackPos-(1-1)], $this->startAttributeStack[$this->stackPos-(1-1)] + $this->endAttributes);
    }

    protected function reduceRule375() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule376() {
         $this->semValue = new Name($this->semStack[$this->stackPos-(1-1)], $this->startAttributeStack[$this->stackPos-(1-1)] + $this->endAttributes);
    }

    protected function reduceRule377() {
         $this->semValue = new Name\FullyQualified($this->semStack[$this->stackPos-(2-2)], $this->startAttributeStack[$this->stackPos-(2-1)] + $this->endAttributes);
    }

    protected function reduceRule378() {
         $this->semValue = new Name\Relative($this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule379() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule380() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule381() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule382() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule383() {
         $this->semValue = null;
    }

    protected function reduceRule384() {
         $this->semValue = $this->semStack[$this->stackPos-(3-2)];
    }

    protected function reduceRule385() {
         $this->semValue = array();
    }

    protected function reduceRule386() {
         $this->semValue = array(new Scalar\EncapsedStringPart(Scalar\String_::parseEscapeSequences($this->semStack[$this->stackPos-(1-1)], '`'), $this->startAttributeStack[$this->stackPos-(1-1)] + $this->endAttributes));
    }

    protected function reduceRule387() {
         foreach ($this->semStack[$this->stackPos-(1-1)] as $s) { if ($s instanceof Node\Scalar\EncapsedStringPart) { $s->value = Node\Scalar\String_::parseEscapeSequences($s->value, '`', true); } }; $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule388() {
         $this->semValue = array();
    }

    protected function reduceRule389() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule390() {
         $this->semValue = new Expr\ConstFetch($this->semStack[$this->stackPos-(1-1)], $this->startAttributeStack[$this->stackPos-(1-1)] + $this->endAttributes);
    }

    protected function reduceRule391() {
         $this->semValue = new Expr\ClassConstFetch($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule392() {
         $attrs = $this->startAttributeStack[$this->stackPos-(4-1)] + $this->endAttributes; $attrs['kind'] = Expr\Array_::KIND_LONG;
            $this->semValue = new Expr\Array_($this->semStack[$this->stackPos-(4-3)], $attrs);
    }

    protected function reduceRule393() {
         $attrs = $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes; $attrs['kind'] = Expr\Array_::KIND_SHORT;
            $this->semValue = new Expr\Array_($this->semStack[$this->stackPos-(3-2)], $attrs);
    }

    protected function reduceRule394() {
         $attrs = $this->startAttributeStack[$this->stackPos-(1-1)] + $this->endAttributes; $attrs['kind'] = ($this->semStack[$this->stackPos-(1-1)][0] === "'" || ($this->semStack[$this->stackPos-(1-1)][1] === "'" && ($this->semStack[$this->stackPos-(1-1)][0] === 'b' || $this->semStack[$this->stackPos-(1-1)][0] === 'B')) ? Scalar\String_::KIND_SINGLE_QUOTED : Scalar\String_::KIND_DOUBLE_QUOTED);
            $this->semValue = new Scalar\String_(Scalar\String_::parse($this->semStack[$this->stackPos-(1-1)]), $attrs);
    }

    protected function reduceRule395() {
         $this->semValue = Scalar\LNumber::fromString($this->semStack[$this->stackPos-(1-1)], $this->startAttributeStack[$this->stackPos-(1-1)] + $this->endAttributes);
    }

    protected function reduceRule396() {
         $this->semValue = new Scalar\DNumber(Scalar\DNumber::parse($this->semStack[$this->stackPos-(1-1)]), $this->startAttributeStack[$this->stackPos-(1-1)] + $this->endAttributes);
    }

    protected function reduceRule397() {
         $this->semValue = new Scalar\MagicConst\Line($this->startAttributeStack[$this->stackPos-(1-1)] + $this->endAttributes);
    }

    protected function reduceRule398() {
         $this->semValue = new Scalar\MagicConst\File($this->startAttributeStack[$this->stackPos-(1-1)] + $this->endAttributes);
    }

    protected function reduceRule399() {
         $this->semValue = new Scalar\MagicConst\Dir($this->startAttributeStack[$this->stackPos-(1-1)] + $this->endAttributes);
    }

    protected function reduceRule400() {
         $this->semValue = new Scalar\MagicConst\Class_($this->startAttributeStack[$this->stackPos-(1-1)] + $this->endAttributes);
    }

    protected function reduceRule401() {
         $this->semValue = new Scalar\MagicConst\Trait_($this->startAttributeStack[$this->stackPos-(1-1)] + $this->endAttributes);
    }

    protected function reduceRule402() {
         $this->semValue = new Scalar\MagicConst\Method($this->startAttributeStack[$this->stackPos-(1-1)] + $this->endAttributes);
    }

    protected function reduceRule403() {
         $this->semValue = new Scalar\MagicConst\Function_($this->startAttributeStack[$this->stackPos-(1-1)] + $this->endAttributes);
    }

    protected function reduceRule404() {
         $this->semValue = new Scalar\MagicConst\Namespace_($this->startAttributeStack[$this->stackPos-(1-1)] + $this->endAttributes);
    }

    protected function reduceRule405() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule406() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule407() {
         $attrs = $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes; $attrs['kind'] = strpos($this->semStack[$this->stackPos-(3-1)], "'") === false ? Scalar\String_::KIND_HEREDOC : Scalar\String_::KIND_NOWDOC; preg_match('/\A[bB]?<<<[ \t]*[\'"]?([a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff]*)[\'"]?(?:\r\n|\n|\r)\z/', $this->semStack[$this->stackPos-(3-1)], $matches); $attrs['docLabel'] = $matches[1];;
            $this->semValue = new Scalar\String_(Scalar\String_::parseDocString($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-2)]), $attrs);
    }

    protected function reduceRule408() {
         $attrs = $this->startAttributeStack[$this->stackPos-(2-1)] + $this->endAttributes; $attrs['kind'] = strpos($this->semStack[$this->stackPos-(2-1)], "'") === false ? Scalar\String_::KIND_HEREDOC : Scalar\String_::KIND_NOWDOC; preg_match('/\A[bB]?<<<[ \t]*[\'"]?([a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff]*)[\'"]?(?:\r\n|\n|\r)\z/', $this->semStack[$this->stackPos-(2-1)], $matches); $attrs['docLabel'] = $matches[1];;
            $this->semValue = new Scalar\String_('', $attrs);
    }

    protected function reduceRule409() {
         $attrs = $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes; $attrs['kind'] = Scalar\String_::KIND_DOUBLE_QUOTED;
            foreach ($this->semStack[$this->stackPos-(3-2)] as $s) { if ($s instanceof Node\Scalar\EncapsedStringPart) { $s->value = Node\Scalar\String_::parseEscapeSequences($s->value, '"', true); } }; $this->semValue = new Scalar\Encapsed($this->semStack[$this->stackPos-(3-2)], $attrs);
    }

    protected function reduceRule410() {
         $attrs = $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes; $attrs['kind'] = strpos($this->semStack[$this->stackPos-(3-1)], "'") === false ? Scalar\String_::KIND_HEREDOC : Scalar\String_::KIND_NOWDOC; preg_match('/\A[bB]?<<<[ \t]*[\'"]?([a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff]*)[\'"]?(?:\r\n|\n|\r)\z/', $this->semStack[$this->stackPos-(3-1)], $matches); $attrs['docLabel'] = $matches[1];;
            foreach ($this->semStack[$this->stackPos-(3-2)] as $s) { if ($s instanceof Node\Scalar\EncapsedStringPart) { $s->value = Node\Scalar\String_::parseEscapeSequences($s->value, null, true); } } $s->value = preg_replace('~(\r\n|\n|\r)\z~', '', $s->value); if ('' === $s->value) array_pop($this->semStack[$this->stackPos-(3-2)]);; $this->semValue = new Scalar\Encapsed($this->semStack[$this->stackPos-(3-2)], $attrs);
    }

    protected function reduceRule411() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule412() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule413() {
         $this->semValue = null;
    }

    protected function reduceRule414() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule415() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule416() {
         $this->semValue = $this->semStack[$this->stackPos-(3-2)];
    }

    protected function reduceRule417() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule418() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule419() {
         $this->semValue = $this->semStack[$this->stackPos-(3-2)];
    }

    protected function reduceRule420() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule421() {
         $this->semValue = new Expr\Variable($this->semStack[$this->stackPos-(1-1)], $this->startAttributeStack[$this->stackPos-(1-1)] + $this->endAttributes);
    }

    protected function reduceRule422() {
         $this->semValue = new Expr\ArrayDimFetch($this->semStack[$this->stackPos-(4-1)], $this->semStack[$this->stackPos-(4-3)], $this->startAttributeStack[$this->stackPos-(4-1)] + $this->endAttributes);
    }

    protected function reduceRule423() {
         $this->semValue = new Expr\ArrayDimFetch($this->semStack[$this->stackPos-(4-1)], $this->semStack[$this->stackPos-(4-3)], $this->startAttributeStack[$this->stackPos-(4-1)] + $this->endAttributes);
    }

    protected function reduceRule424() {
         $this->semValue = new Expr\ArrayDimFetch($this->semStack[$this->stackPos-(4-1)], $this->semStack[$this->stackPos-(4-3)], $this->startAttributeStack[$this->stackPos-(4-1)] + $this->endAttributes);
    }

    protected function reduceRule425() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule426() {
         $this->semValue = new Expr\MethodCall($this->semStack[$this->stackPos-(4-1)], $this->semStack[$this->stackPos-(4-3)], $this->semStack[$this->stackPos-(4-4)], $this->startAttributeStack[$this->stackPos-(4-1)] + $this->endAttributes);
    }

    protected function reduceRule427() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule428() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule429() {
         $this->semValue = new Expr\PropertyFetch($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule430() {
         $this->semValue = substr($this->semStack[$this->stackPos-(1-1)], 1);
    }

    protected function reduceRule431() {
         $this->semValue = $this->semStack[$this->stackPos-(4-3)];
    }

    protected function reduceRule432() {
         $this->semValue = new Expr\Variable($this->semStack[$this->stackPos-(2-2)], $this->startAttributeStack[$this->stackPos-(2-1)] + $this->endAttributes);
    }

    protected function reduceRule433() {
         $this->semValue = new Expr\StaticPropertyFetch($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule434() {
         $this->semValue = new Expr\Variable($this->semStack[$this->stackPos-(1-1)], $this->startAttributeStack[$this->stackPos-(1-1)] + $this->endAttributes);
    }

    protected function reduceRule435() {
         $this->semValue = new Expr\ArrayDimFetch($this->semStack[$this->stackPos-(4-1)], $this->semStack[$this->stackPos-(4-3)], $this->startAttributeStack[$this->stackPos-(4-1)] + $this->endAttributes);
    }

    protected function reduceRule436() {
         $this->semValue = new Expr\ArrayDimFetch($this->semStack[$this->stackPos-(4-1)], $this->semStack[$this->stackPos-(4-3)], $this->startAttributeStack[$this->stackPos-(4-1)] + $this->endAttributes);
    }

    protected function reduceRule437() {
         $this->semValue = new Expr\PropertyFetch($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule438() {
         $this->semValue = new Expr\StaticPropertyFetch($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule439() {
         $this->semValue = new Expr\StaticPropertyFetch($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule440() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule441() {
         $this->semValue = $this->semStack[$this->stackPos-(3-2)];
    }

    protected function reduceRule442() {
         $this->semValue = new Expr\Variable($this->semStack[$this->stackPos-(1-1)], $this->startAttributeStack[$this->stackPos-(1-1)] + $this->endAttributes);
    }

    protected function reduceRule443() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule444() {
         $this->semValue = $this->semStack[$this->stackPos-(3-2)];
    }

    protected function reduceRule445() {
         $this->semValue = new Expr\Variable($this->semStack[$this->stackPos-(1-1)], $this->startAttributeStack[$this->stackPos-(1-1)] + $this->endAttributes);
    }

    protected function reduceRule446() {
         $this->semValue = new Expr\List_($this->semStack[$this->stackPos-(4-3)], $this->startAttributeStack[$this->stackPos-(4-1)] + $this->endAttributes);
    }

    protected function reduceRule447() {
         $this->semStack[$this->stackPos-(3-1)][] = $this->semStack[$this->stackPos-(3-3)]; $this->semValue = $this->semStack[$this->stackPos-(3-1)];
    }

    protected function reduceRule448() {
         $this->semValue = array($this->semStack[$this->stackPos-(1-1)]);
    }

    protected function reduceRule449() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule450() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule451() {
         $this->semValue = null;
    }

    protected function reduceRule452() {
         $this->semValue = array();
    }

    protected function reduceRule453() {
         $this->semValue = $this->semStack[$this->stackPos-(2-1)];
    }

    protected function reduceRule454() {
         $this->semStack[$this->stackPos-(3-1)][] = $this->semStack[$this->stackPos-(3-3)]; $this->semValue = $this->semStack[$this->stackPos-(3-1)];
    }

    protected function reduceRule455() {
         $this->semValue = array($this->semStack[$this->stackPos-(1-1)]);
    }

    protected function reduceRule456() {
         $this->semValue = new Expr\ArrayItem($this->semStack[$this->stackPos-(3-3)], $this->semStack[$this->stackPos-(3-1)], false, $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule457() {
         $this->semValue = new Expr\ArrayItem($this->semStack[$this->stackPos-(1-1)], null, false, $this->startAttributeStack[$this->stackPos-(1-1)] + $this->endAttributes);
    }

    protected function reduceRule458() {
         $this->semValue = new Expr\ArrayItem($this->semStack[$this->stackPos-(4-4)], $this->semStack[$this->stackPos-(4-1)], true, $this->startAttributeStack[$this->stackPos-(4-1)] + $this->endAttributes);
    }

    protected function reduceRule459() {
         $this->semValue = new Expr\ArrayItem($this->semStack[$this->stackPos-(2-2)], null, true, $this->startAttributeStack[$this->stackPos-(2-1)] + $this->endAttributes);
    }

    protected function reduceRule460() {
         $this->semStack[$this->stackPos-(2-1)][] = $this->semStack[$this->stackPos-(2-2)]; $this->semValue = $this->semStack[$this->stackPos-(2-1)];
    }

    protected function reduceRule461() {
         $this->semStack[$this->stackPos-(2-1)][] = $this->semStack[$this->stackPos-(2-2)]; $this->semValue = $this->semStack[$this->stackPos-(2-1)];
    }

    protected function reduceRule462() {
         $this->semValue = array($this->semStack[$this->stackPos-(1-1)]);
    }

    protected function reduceRule463() {
         $this->semValue = array($this->semStack[$this->stackPos-(2-1)], $this->semStack[$this->stackPos-(2-2)]);
    }

    protected function reduceRule464() {
         $this->semValue = new Scalar\EncapsedStringPart($this->semStack[$this->stackPos-(1-1)], $this->startAttributeStack[$this->stackPos-(1-1)] + $this->endAttributes);
    }

    protected function reduceRule465() {
         $this->semValue = new Expr\Variable(substr($this->semStack[$this->stackPos-(1-1)], 1), $this->startAttributeStack[$this->stackPos-(1-1)] + $this->endAttributes);
    }

    protected function reduceRule466() {
         $this->semValue = new Expr\ArrayDimFetch(new Expr\Variable(substr($this->semStack[$this->stackPos-(4-1)], 1), $this->startAttributeStack[$this->stackPos-(4-1)] + $this->endAttributes), $this->semStack[$this->stackPos-(4-3)], $this->startAttributeStack[$this->stackPos-(4-1)] + $this->endAttributes);
    }

    protected function reduceRule467() {
         $this->semValue = new Expr\PropertyFetch(new Expr\Variable(substr($this->semStack[$this->stackPos-(3-1)], 1), $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes), $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule468() {
         $this->semValue = new Expr\Variable($this->semStack[$this->stackPos-(3-2)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule469() {
         $this->semValue = new Expr\Variable($this->semStack[$this->stackPos-(3-2)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule470() {
         $this->semValue = new Expr\ArrayDimFetch(new Expr\Variable($this->semStack[$this->stackPos-(6-2)], $this->startAttributeStack[$this->stackPos-(6-1)] + $this->endAttributes), $this->semStack[$this->stackPos-(6-4)], $this->startAttributeStack[$this->stackPos-(6-1)] + $this->endAttributes);
    }

    protected function reduceRule471() {
         $this->semValue = $this->semStack[$this->stackPos-(3-2)];
    }

    protected function reduceRule472() {
         $this->semValue = new Scalar\String_($this->semStack[$this->stackPos-(1-1)], $this->startAttributeStack[$this->stackPos-(1-1)] + $this->endAttributes);
    }

    protected function reduceRule473() {
         $this->semValue = new Scalar\String_($this->semStack[$this->stackPos-(1-1)], $this->startAttributeStack[$this->stackPos-(1-1)] + $this->endAttributes);
    }

    protected function reduceRule474() {
         $this->semValue = new Expr\Variable(substr($this->semStack[$this->stackPos-(1-1)], 1), $this->startAttributeStack[$this->stackPos-(1-1)] + $this->endAttributes);
    }

    protected function reduceRule475() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule476() {
         $this->semValue = new PhackNode\GenericsConstraint($this->semStack[$this->stackPos-(3-1)], PhackNode\GenericsConstraint::AS, $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule477() {
         $this->semValue = new PhackNode\GenericsConstraint($this->semStack[$this->stackPos-(3-1)], PhackNode\GenericsConstraint::SUPER, $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule478() {
         $this->semValue = $this->semValue = array($this->semStack[$this->stackPos-(1-1)]);
    }

    protected function reduceRule479() {
         $this->semValue = $this->semStack[$this->stackPos-(3-1)][] = $this->semStack[$this->stackPos-(3-3)]; $this->semValue = $this->semStack[$this->stackPos-(3-1)];
    }

    protected function reduceRule480() {
         $this->semValue = $this->semStack[$this->stackPos-(3-2)];
    }

    protected function reduceRule481() {
         $this->semValue = null;
    }

    protected function reduceRule482() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule483() {
         $this->semValue = $this->semValue = array($this->semStack[$this->stackPos-(1-1)]);
    }

    protected function reduceRule484() {
         $this->semValue = $this->semStack[$this->stackPos-(3-1)][] = $this->semStack[$this->stackPos-(3-3)]; $this->semValue = $this->semStack[$this->stackPos-(3-1)];
    }

    protected function reduceRule485() {
         $this->semValue = new Node\Const_($this->semStack[$this->stackPos-(4-1)], $this->semStack[$this->stackPos-(4-3)], $this->startAttributeStack[$this->stackPos-(4-1)] + $this->endAttributes);
    }

    protected function reduceRule486() {
         $this->semValue = array($this->semStack[$this->stackPos-(1-1)]);
    }

    protected function reduceRule487() {
         $this->semStack[$this->stackPos-(2-1)][] = $this->semStack[$this->stackPos-(2-2)]; $this->semValue = $this->semStack[$this->stackPos-(2-1)];
    }

    protected function reduceRule488() {
         $this->semValue = array();
    }

    protected function reduceRule489() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule490() {
         $this->semValue = new PhackNode\UserAttribute($this->semStack[$this->stackPos-(1-1)], $this->semValue = array(), $this->startAttributeStack[$this->stackPos-(1-1)] + $this->endAttributes);
    }

    protected function reduceRule491() {
         $this->semValue = new PhackNode\UserAttribute($this->semStack[$this->stackPos-(4-1)], $this->semStack[$this->stackPos-(4-3)], $this->startAttributeStack[$this->stackPos-(4-1)] + $this->endAttributes);
    }

    protected function reduceRule492() {
         $this->semValue = $this->semValue = array($this->semStack[$this->stackPos-(1-1)]);
    }

    protected function reduceRule493() {
         $this->semValue = $this->semStack[$this->stackPos-(3-1)][] = $this->semStack[$this->stackPos-(3-3)]; $this->semValue = $this->semStack[$this->stackPos-(3-1)];
    }

    protected function reduceRule494() {
         $this->semValue = $this->semStack[$this->stackPos-(3-2)];
    }

    protected function reduceRule495() {
         $this->semValue = array_merge($this->semStack[$this->stackPos-(4-1)], $this->semStack[$this->stackPos-(4-3)]);
    }

    protected function reduceRule496() {
         $this->semValue = $this->semValue = array(new Node\Param(substr($this->semStack[$this->stackPos-(1-1)], 1), null, null, false, false, $this->startAttributeStack[$this->stackPos-(1-1)] + $this->endAttributes));
    }

    protected function reduceRule497() {
         $this->semValue = $this->semStack[$this->stackPos-(3-2)];
    }

    protected function reduceRule498() {
         $this->semValue = new PhackExpr\Lambda($this->semStack[$this->stackPos-(3-1)], $this->semValue = array(new Stmt\Return_($this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes)), $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule499() {
         $this->semValue = new PhackExpr\Lambda($this->semStack[$this->stackPos-(5-1)], $this->semStack[$this->stackPos-(5-4)], $this->startAttributeStack[$this->stackPos-(5-1)] + $this->endAttributes);
    }

    protected function reduceRule500() {
         $this->semValue = $this->semValue = array($this->semStack[$this->stackPos-(1-1)]);
    }

    protected function reduceRule501() {
         $this->semValue = $this->semStack[$this->stackPos-(3-1)][] = $this->semStack[$this->stackPos-(3-3)]; $this->semValue = $this->semStack[$this->stackPos-(3-1)];
    }

    protected function reduceRule502() {
         $this->semValue = $this->semValue = array(false);
    }

    protected function reduceRule503() {
         $this->semValue = $this->semValue = array(true);
    }

    protected function reduceRule504() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)][] = false; $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule505() {
         $this->semValue = $this->semStack[$this->stackPos-(3-1)][] = true; $this->semValue = $this->semStack[$this->stackPos-(3-1)];
    }

    protected function reduceRule506() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule507() {
         $this->semValue = $this->semStack[$this->stackPos-(2-1)];
    }

    protected function reduceRule508() {
         $this->semValue = array();
    }

    protected function reduceRule509() {
         $this->semValue = array($this->semStack[$this->stackPos-(1-1)]);
    }

    protected function reduceRule510() {
         $this->semStack[$this->stackPos-(3-1)][] = $this->semStack[$this->stackPos-(3-3)]; $this->semValue = $this->semStack[$this->stackPos-(3-1)];
    }

    protected function reduceRule511() {
         $this->semValue = new PhackNode\Param(substr($this->semStack[$this->stackPos-(5-5)], 1), null, $this->semStack[$this->stackPos-(5-2)], $this->semStack[$this->stackPos-(5-3)], $this->semStack[$this->stackPos-(5-4)], $this->semStack[$this->stackPos-(5-1)], $this->startAttributeStack[$this->stackPos-(5-1)] + $this->endAttributes);
    }

    protected function reduceRule512() {
         $this->semValue = new PhackNode\Param(substr($this->semStack[$this->stackPos-(7-5)], 1), $this->semStack[$this->stackPos-(7-7)], $this->semStack[$this->stackPos-(7-2)], $this->semStack[$this->stackPos-(7-3)], $this->semStack[$this->stackPos-(7-4)], $this->semStack[$this->stackPos-(7-1)], $this->startAttributeStack[$this->stackPos-(7-1)] + $this->endAttributes);
    }

    protected function reduceRule513() {
         $this->semValue = null;
    }

    protected function reduceRule514() {
         $this->semValue = Stmt\Class_::MODIFIER_PUBLIC;
    }

    protected function reduceRule515() {
         $this->semValue = Stmt\Class_::MODIFIER_PROTECTED;
    }

    protected function reduceRule516() {
         $this->semValue = Stmt\Class_::MODIFIER_PRIVATE;
    }

    protected function reduceRule517() {
         $this->semValue = new PhackStmt\PropertyProperty(substr($this->semStack[$this->stackPos-(2-2)], 1), null, $this->semStack[$this->stackPos-(2-1)], $this->startAttributeStack[$this->stackPos-(2-1)] + $this->endAttributes);
    }

    protected function reduceRule518() {
         $this->semValue = new PhackStmt\PropertyProperty(substr($this->semStack[$this->stackPos-(4-2)], 1), $this->semStack[$this->stackPos-(4-4)], $this->semStack[$this->stackPos-(4-1)], $this->startAttributeStack[$this->stackPos-(4-1)] + $this->endAttributes);
    }

    protected function reduceRule519() {
         $this->semValue = $this->semStack[$this->stackPos-(2-1)];
    }

    protected function reduceRule520() {
         $this->semValue = $this->semStack[$this->stackPos-(4-2)];
    }

    protected function reduceRule521() {
         $this->semValue = new PhackNode\SoftNullableType($this->semStack[$this->stackPos-(2-2)], false, true, $this->startAttributeStack[$this->stackPos-(2-1)] + $this->endAttributes);
    }

    protected function reduceRule522() {
         $this->semValue = new PhackNode\SoftNullableType($this->semStack[$this->stackPos-(2-2)], true, false, $this->startAttributeStack[$this->stackPos-(2-1)] + $this->endAttributes);
    }

    protected function reduceRule523() {
         $this->semValue = new PhackNode\GenericsType($this->semStack[$this->stackPos-(4-1)], $this->semStack[$this->stackPos-(4-3)], $this->startAttributeStack[$this->stackPos-(4-1)] + $this->endAttributes);
    }

    protected function reduceRule524() {
         $this->semValue = new PhackNode\GenericsType('array', $this->semStack[$this->stackPos-(4-3)], $this->startAttributeStack[$this->stackPos-(4-1)] + $this->endAttributes);
    }

    protected function reduceRule525() {
         $this->semValue = new PhackNode\CallableType($this->semStack[$this->stackPos-(8-5)], $this->semStack[$this->stackPos-(8-7)], $this->semStack[$this->stackPos-(8-3)], $this->startAttributeStack[$this->stackPos-(8-1)] + $this->endAttributes);
    }

    protected function reduceRule526() {
         $this->semValue = new PhackNode\GenericsType('Vector', $this->semStack[$this->stackPos-(4-3)], $this->startAttributeStack[$this->stackPos-(4-1)] + $this->endAttributes);
    }

    protected function reduceRule527() {
         $this->semValue = new PhackStmt\Class_($this->semStack[$this->stackPos-(8-2)], ['type' => $this->semStack[$this->stackPos-(8-1)], 'extends' => $this->semStack[$this->stackPos-(8-4)],
	                                   'implements' => $this->semStack[$this->stackPos-(8-5)], 'stmts' => $this->semStack[$this->stackPos-(8-7)],
	                                   'generics' => $this->semStack[$this->stackPos-(8-3)]], $this->startAttributeStack[$this->stackPos-(8-1)] + $this->endAttributes);
    }

    protected function reduceRule528() {
         $this->semValue = new PhackStmt\Class_($this->semStack[$this->stackPos-(9-3)], ['type' => $this->semStack[$this->stackPos-(9-2)], 'extends' => $this->semStack[$this->stackPos-(9-5)],
	                                   'implements' => $this->semStack[$this->stackPos-(9-6)], 'stmts' => $this->semStack[$this->stackPos-(9-8)],
	                                   'generics' => $this->semStack[$this->stackPos-(9-4)], 'user_attributes' => $this->semStack[$this->stackPos-(9-1)]], $this->startAttributeStack[$this->stackPos-(9-1)] + $this->endAttributes);
    }

    protected function reduceRule529() {
         $this->semValue = new PhackStmt\Enum($this->semStack[$this->stackPos-(8-3)], $this->semStack[$this->stackPos-(8-5)], $this->semStack[$this->stackPos-(8-7)], $this->startAttributeStack[$this->stackPos-(8-1)] + $this->endAttributes);
    }

    protected function reduceRule530() {
         $this->semValue = new PhackStmt\Enum($this->semStack[$this->stackPos-(7-2)], $this->semStack[$this->stackPos-(7-4)], $this->semStack[$this->stackPos-(7-6)], $this->startAttributeStack[$this->stackPos-(7-1)] + $this->endAttributes);
    }

    protected function reduceRule531() {
         $this->semValue = new PhackStmt\ClassMethod($this->semStack[$this->stackPos-(10-4)], ['type' => $this->semStack[$this->stackPos-(10-1)], 'byRef' => $this->semStack[$this->stackPos-(10-3)], 'params' => $this->semStack[$this->stackPos-(10-7)],
	                                        'returnType' => $this->semStack[$this->stackPos-(10-9)], 'stmts' => $this->semStack[$this->stackPos-(10-10)],
	                                        'generics' => $this->semStack[$this->stackPos-(10-5)]], $this->startAttributeStack[$this->stackPos-(10-1)] + $this->endAttributes);
    }

    protected function reduceRule532() {
         $this->semValue = new PhackStmt\ClassMethod($this->semStack[$this->stackPos-(11-5)], ['type' => $this->semStack[$this->stackPos-(11-2)], 'byRef' => $this->semStack[$this->stackPos-(11-4)], 'params' => $this->semStack[$this->stackPos-(11-8)],
	                                        'returnType' => $this->semStack[$this->stackPos-(11-10)], 'stmts' => $this->semStack[$this->stackPos-(11-11)],
	                                        'generics' => $this->semStack[$this->stackPos-(11-6)], 'user_attributes' => $this->semStack[$this->stackPos-(11-1)]], $this->startAttributeStack[$this->stackPos-(11-1)] + $this->endAttributes);
    }

    protected function reduceRule533() {
         $this->semValue = new PhackStmt\Function_($this->semStack[$this->stackPos-(11-3)], ['byRef' => $this->semStack[$this->stackPos-(11-2)], 'params' => $this->semStack[$this->stackPos-(11-6)],
	                                      'returnType' => $this->semStack[$this->stackPos-(11-8)], 'stmts' => $this->semStack[$this->stackPos-(11-10)],
	                                      'generics' => $this->semStack[$this->stackPos-(11-4)]], $this->startAttributeStack[$this->stackPos-(11-1)] + $this->endAttributes);
    }

    protected function reduceRule534() {
         $this->semValue = new PhackStmt\Function_($this->semStack[$this->stackPos-(12-4)], ['byRef' => $this->semStack[$this->stackPos-(12-3)], 'params' => $this->semStack[$this->stackPos-(12-7)],
	                                      'returnType' => $this->semStack[$this->stackPos-(12-9)], 'stmts' => $this->semStack[$this->stackPos-(12-11)],
	                                      'generics' => $this->semStack[$this->stackPos-(12-5)], 'user_attributes' => $this->semStack[$this->stackPos-(12-1)]], $this->startAttributeStack[$this->stackPos-(12-1)] + $this->endAttributes);
    }

    protected function reduceRule535() {
        $this->semValue = $this->semStack[$this->stackPos];
    }

    protected function reduceRule536() {
         $this->semValue = new PhackExpr\PipeVar($this->startAttributeStack[$this->stackPos-(1-1)] + $this->endAttributes);
    }

    protected function reduceRule537() {
         $this->semValue = new PhackExpr\NullSafePropertyFetch($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule538() {
         $this->semValue = $this->semStack[$this->stackPos-(1-1)];
    }

    protected function reduceRule539() {
         $this->semValue = new PhackExpr\Pipe($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule540() {
         $this->semValue = new PhackExpr\NullSafeMethodCall($this->semStack[$this->stackPos-(4-1)], $this->semStack[$this->stackPos-(4-3)], $this->semStack[$this->stackPos-(4-4)], $this->startAttributeStack[$this->stackPos-(4-1)] + $this->endAttributes);
    }

    protected function reduceRule541() {
          $this->semValue = new PhackStmt\Alias($this->semStack[$this->stackPos-(4-2)], $this->semStack[$this->stackPos-(4-4)], $this->startAttributeStack[$this->stackPos-(4-1)] + $this->endAttributes);
    }

    protected function reduceRule542() {
         $this->semValue = new PhackExpr\NullSafePropertyFetch($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule543() {
         $this->semValue = $this->semStack[$this->stackPos-(2-1)];
    }

    protected function reduceRule544() {
         $this->semValue = new PhackExpr\NullSafePropertyFetch(new Expr\Variable(substr($this->semStack[$this->stackPos-(3-1)], 1), $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes), $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule545() {
         $this->semValue = new PhackExpr\Shape($this->semStack[$this->stackPos-(4-3)]);
    }

    protected function reduceRule546() {
         $this->semValue = new PhackExpr\Vector($this->semStack[$this->stackPos-(4-3)]);
    }

    protected function reduceRule547() {
         $this->semValue = array();
    }

    protected function reduceRule548() {
         $this->semValue = $this->semStack[$this->stackPos-(2-1)];
    }

    protected function reduceRule549() {
         $this->semStack[$this->stackPos-(3-1)][] = $this->semStack[$this->stackPos-(3-3)]; $this->semValue = $this->semStack[$this->stackPos-(3-1)];
    }

    protected function reduceRule550() {
         $this->semValue = array($this->semStack[$this->stackPos-(1-1)]);
    }

    protected function reduceRule551() {
         $this->semValue = new PhackExpr\ShapeItem($this->semStack[$this->stackPos-(3-1)], $this->semStack[$this->stackPos-(3-3)], $this->startAttributeStack[$this->stackPos-(3-1)] + $this->endAttributes);
    }

    protected function reduceRule552() {
         $this->semValue = array();
    }

    protected function reduceRule553() {
         $this->semValue = $this->semStack[$this->stackPos-(2-1)];
    }

    protected function reduceRule554() {
         $this->semStack[$this->stackPos-(3-1)][] = $this->semStack[$this->stackPos-(3-3)]; $this->semValue = $this->semStack[$this->stackPos-(3-1)];
    }

    protected function reduceRule555() {
         $this->semValue = array($this->semStack[$this->stackPos-(1-1)]);
    }
}
